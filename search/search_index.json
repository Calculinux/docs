{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Calculinux","text":"<p>Calculinux is a powerful Linux distribution designed specifically for the PicoCalc handheld computer running on the Luckfox Lyra and similar single-board computers (SBCs).</p>"},{"location":"#what-is-calculinux","title":"What is Calculinux?","text":"<p>Calculinux transforms your PicoCalc into a fully-functional Linux computer, opening up endless possibilities for computation, development, and experimentation in a pocket-sized form factor.</p> <p>Built on the robust Yocto Project framework, Calculinux provides:</p> <ul> <li>\u2705 Optimized Performance - Tailored specifically for the PicoCalc hardware</li> <li>\ud83d\udd27 Developer-Friendly - Full access to Linux tools and development environments</li> <li>\ud83d\udce6 Package Management - Easy installation of additional software</li> <li>\ud83c\udfa8 Customizable - Open-source and fully modifiable</li> <li>\ud83d\ude80 Active Development - Regular updates and community support</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li> <p> Getting Started</p> <p>New to Calculinux? Start here to get up and running.</p> <p> Installation Guide</p> </li> <li> <p> Hardware</p> <p>Learn about compatible hardware and modifications.</p> <p> Hardware Guide</p> </li> <li> <p> User Guide</p> <p>Discover how to use Calculinux effectively.</p> <p> User Guide</p> </li> <li> <p> Developer Guide</p> <p>Build, customize, and contribute to Calculinux.</p> <p> Developer Guide</p> </li> </ul>"},{"location":"#community-support","title":"Community &amp; Support","text":"<p>Calculinux is an open-source community project. Join us!</p> <ul> <li>\ud83d\udcac Forum Discussion: ClockworkPi Forum Thread</li> <li>\ud83d\udc1b Issue Tracker: GitHub Issues</li> <li>\ud83d\udca1 Contributing: See our contribution guidelines</li> <li>\ud83d\udcda Source Code: GitHub Repository</li> </ul>"},{"location":"#system-requirements","title":"System Requirements","text":"<p>Minimum Requirements</p> <ul> <li>Hardware: PicoCalc</li> <li>Microcontroller:  Luckfox Lyra SBC</li> <li>Storage: MicroSD card (8GB minimum, 16GB+ recommended)</li> </ul>"},{"location":"#current-status","title":"Current Status","text":"<p>Calculinux is under active development. The current release includes:</p> <ul> <li>\u2705 Working LCD and keyboard drivers</li> <li>\u2705 Basic system functionality</li> <li>\u2705 Audio drivers</li> <li>\u2705 A/B Upgrade support, preserving user data</li> <li>\ud83d\udea7 Package management (in progress)</li> <li>\ud83d\udea7 Additional hardware support (planned)</li> </ul> <p>Check the roadmap for upcoming features.</p>"},{"location":"#acknowledgments","title":"Acknowledgments","text":"<p>Calculinux builds upon the incredible work of:</p> <ul> <li>hisptoot - Original Luckfox Lyra port and driver development</li> <li>0xd61 - Yocto-based image development</li> <li>johnlaur - Kernel driver and image development</li> <li>nekocharm - display driver contributions</li> <li>benklop - Calculinux organization and setup</li> <li>Luckfox - SDK and hardware support</li> <li>ClockworkPi - PicoCalc hardware</li> <li>Yocto Project - Build system foundation</li> <li>The broader open-source community</li> </ul> <p>Ready to get started?</p> <p>Head over to the Getting Started Guide to begin your Calculinux journey!</p>"},{"location":"developer/building/","title":"Building Calculinux","text":"<p>This guide covers building the Calculinux distribution from source.</p>"},{"location":"developer/building/#prerequisites","title":"Prerequisites","text":""},{"location":"developer/building/#system-requirements","title":"System Requirements","text":"<ul> <li>Host OS: Linux (Ubuntu 22.04 LTS or similar recommended)</li> <li>Disk Space: Minimum 50GB free space (100GB+ recommended)</li> <li>Memory: 8GB RAM minimum (16GB+ recommended for parallel builds)</li> <li>CPU: Multi-core processor (builds can take 2-6 hours depending on hardware)</li> </ul>"},{"location":"developer/building/#required-software","title":"Required Software","text":"<p>Install the required packages on your build host:</p> <pre><code># Ubuntu/Debian\nsudo apt install gawk wget git diffstat unzip texinfo \\\n    gcc build-essential chrpath socat cpio python3 \\\n    python3-pip python3-pexpect xz-utils debianutils \\\n    iputils-ping python3-git python3-jinja2 libegl1-mesa \\\n    libsdl1.2-dev pylint3 xterm python3-subunit mesa-common-dev \\\n    zstd liblz4-tool\n</code></pre>"},{"location":"developer/building/#build-system-overview","title":"Build System Overview","text":"<p>Calculinux uses the Yocto Project build system with:</p> <ul> <li>Build Tool: KAS for simplified configuration</li> <li>Base: Yocto Scarthgap (4.2)</li> <li>Distribution: Calculinux (based on Poky)</li> <li>Layers: Multiple meta-layers for hardware support and software packages</li> </ul>"},{"location":"developer/building/#quick-start","title":"Quick Start","text":""},{"location":"developer/building/#1-clone-the-repository","title":"1. Clone the Repository","text":"<pre><code>mkdir calculinux-build &amp;&amp; cd calculinux-build\ngit clone https://github.com/Calculinux/meta-calculinux.git\ncd meta-calculinux\n</code></pre>"},{"location":"developer/building/#2-build-with-kas","title":"2. Build with KAS","text":"<p>The simplest way to build is using the KAS container:</p> <pre><code>./kas-container --ssh-dir ~/.ssh build --update kas-luckfox-lyra-bundle.yaml\n</code></pre> <p>This command will:</p> <ol> <li>Download all required Yocto layers</li> <li>Configure the build for Luckfox Lyra</li> <li>Build the complete distribution image</li> <li>Generate IPK packages</li> </ol>"},{"location":"developer/building/#3-locate-build-output","title":"3. Locate Build Output","text":"<p>After the build completes (2-6 hours), find your images in:</p> <pre><code>build/tmp/deploy/images/luckfox-lyra/\n</code></pre> <p>Key outputs:</p> <ul> <li><code>calculinux-image-luckfox-lyra.rootfs.wic.gz</code> - Full disk image for initial installation</li> <li><code>calculinux-bundle-luckfox-lyra.raucb</code> - RAUC update bundle for updating existing installations</li> </ul>"},{"location":"developer/building/#build-types-and-package-feed-configuration","title":"Build Types and Package Feed Configuration","text":"<p>Calculinux images are automatically configured with the appropriate package feed based on how they are built. Feeds are pre-configured in the image and typically do not require manual intervention. This section is primarily informational to help you understand the feed structure.</p>"},{"location":"developer/building/#understanding-feed-configuration","title":"Understanding Feed Configuration","text":"<p>Package feeds are organized by:</p> <ol> <li>DISTRO_CODENAME - The Yocto/Poky codename (e.g., <code>walnascar</code> for Scarthgap 4.2)</li> <li>FEED_SUBFOLDER - Either <code>continuous</code> (development) or <code>release</code> (stable tags)</li> </ol> <p>The feed URL structure is: <pre><code>https://opkg.calculinux.org/ipk/{DISTRO_CODENAME}/{FEED_SUBFOLDER}/\n</code></pre></p>"},{"location":"developer/building/#ci-build-configuration-automated","title":"CI Build Configuration (Automated)","text":"<p>When building via GitHub Actions CI, the build system automatically generates <code>build/conf/auto.conf</code> to configure the package feeds:</p> Build Trigger DISTRO_CODENAME FEED_SUBFOLDER Resulting Feed URL <code>main</code> branch push <code>walnascar</code> <code>continuous</code> <code>https://opkg.calculinux.org/ipk/walnascar/continuous/</code> <code>develop</code> branch push <code>develop</code> <code>continuous</code> <code>https://opkg.calculinux.org/ipk/develop/continuous/</code> Tagged release (e.g., <code>v1.0.0</code>) <code>walnascar</code> <code>release</code> <code>https://opkg.calculinux.org/ipk/walnascar/release/</code> Pre-release tag (e.g., <code>v1.0.0-rc1</code>) <code>walnascar</code> <code>release</code> <code>https://opkg.calculinux.org/ipk/walnascar/release/</code> <p>Example auto.conf generated by CI: <pre><code># For main branch:\nDISTRO_CODENAME = \"walnascar\"\nCALCULINUX_FEED_SUBFOLDER = \"continuous\"\n\n# For develop branch:\nDISTRO_CODENAME = \"develop\"\nCALCULINUX_FEED_SUBFOLDER = \"continuous\"\n\n# For tagged release (v1.0.0):\nDISTRO_CODENAME = \"walnascar\"\nCALCULINUX_FEED_SUBFOLDER = \"release\"\n</code></pre></p>"},{"location":"developer/building/#manual-build-configuration","title":"Manual Build Configuration","text":"<p>When you build manually (without CI), auto.conf is not created, so the configuration comes from the distribution defaults in <code>meta-calculinux-distro/conf/distro/calculinux-distro.conf</code>:</p> <pre><code># Default values from calculinux-distro.conf:\nDISTRO_CODENAME = \"walnascar\"           # Inherited from poky.conf\nCALCULINUX_FEED_SUBFOLDER ??= \"continuous\"  # Defaults to continuous\n</code></pre> <p>Manual Build Behavior:</p> What You Do DISTRO_CODENAME FEED_SUBFOLDER Feed URL <code>kas-container build kas-luckfox-lyra-bundle.yaml</code> <code>walnascar</code> (from Poky) <code>continuous</code> (default) <code>ipk/walnascar/continuous/</code> Add <code>CALCULINUX_FEED_SUBFOLDER = \"release\"</code> to <code>build/conf/local.conf</code> <code>walnascar</code> (from Poky) <code>release</code> (override) <code>ipk/walnascar/release/</code> Add <code>DISTRO_CODENAME = \"develop\"</code> to <code>build/conf/local.conf</code> <code>develop</code> (override) <code>continuous</code> (default) <code>ipk/develop/continuous/</code>"},{"location":"developer/building/#feed-configuration-variables","title":"Feed Configuration Variables","text":"<p>These variables control which package feed your image will use:</p> <ul> <li><code>DISTRO_CODENAME</code>: Distribution codename</li> <li>Inherited from <code>poky.conf</code> (currently <code>walnascar</code> for Scarthgap 4.2)</li> <li>CI overrides this to <code>develop</code> for develop branch builds</li> <li> <p>Can be manually overridden in <code>build/conf/local.conf</code> or <code>build/conf/auto.conf</code></p> </li> <li> <p><code>CALCULINUX_FEED_SUBFOLDER</code>: Feed subdirectory</p> </li> <li>Defaults to <code>continuous</code> if not specified</li> <li>CI sets to <code>release</code> for tagged builds</li> <li>Can be manually overridden in <code>build/conf/local.conf</code></li> </ul>"},{"location":"developer/building/#when-to-change-feed-configuration","title":"When to Change Feed Configuration","text":"<p>You typically don't need to change feed configuration unless:</p> <ol> <li>Testing a different feed: You want to test your local build with a different package repository</li> <li>Custom deployment: You're creating a custom image variant with specific package sources</li> <li>Development workflow: You're developing packages and want to use a test feed</li> </ol> <p>To change the feed configuration for manual builds, create or edit <code>build/conf/local.conf</code>:</p> <pre><code># Example: Use the release feed instead of continuous\nCALCULINUX_FEED_SUBFOLDER = \"release\"\n\n# Example: Use the develop feed\nDISTRO_CODENAME = \"develop\"\nCALCULINUX_FEED_SUBFOLDER = \"continuous\"\n</code></pre>"},{"location":"developer/building/#verifying-feed-configuration","title":"Verifying Feed Configuration","text":"<p>To check which feed your image will use:</p> <pre><code># Inside kas-container shell:\n./kas-container shell kas-luckfox-lyra-bundle.yaml\n\n# Query the feed configuration:\nbitbake -e calculinux-image | grep -E \"^(DISTRO_CODENAME|CALCULINUX_FEED_SUBFOLDER|PACKAGE_FEED_BASE_PATHS)=\"\n</code></pre> <p>Example output: <pre><code>DISTRO_CODENAME=\"walnascar\"\nCALCULINUX_FEED_SUBFOLDER=\"continuous\"\nPACKAGE_FEED_BASE_PATHS=\"ipk/walnascar/continuous\"\n</code></pre></p>"},{"location":"developer/building/#how-feed-configuration-works","title":"How Feed Configuration Works","text":"<p>The feed configuration is baked into the image during build:</p> <ol> <li>Build Time: Yocto reads <code>DISTRO_CODENAME</code> and <code>CALCULINUX_FEED_SUBFOLDER</code> variables</li> <li>Image Creation: Feed URL is written to <code>/etc/opkg/opkg.conf</code> in the image</li> <li>Runtime: <code>opkg</code> uses the configured feed URL to install/update packages</li> </ol> <p>Users can still manually change feeds after installation by editing <code>/etc/opkg/opkg.conf</code>, but this is only needed for advanced use cases (see Package Management for details).</p>"},{"location":"developer/building/#configuring-your-build","title":"Configuring Your Build","text":""},{"location":"developer/building/#setting-distribution-codename","title":"Setting Distribution Codename","text":"<p>To manually set the distribution codename, edit <code>conf/local.conf</code>:</p> <pre><code># For stable builds\nDISTRO_CODENAME = \"walnascar\"\n\n# For development builds\nDISTRO_CODENAME = \"develop\"\n</code></pre>"},{"location":"developer/building/#setting-feed-subfolder","title":"Setting Feed Subfolder","text":"<p>To configure the package feed subfolder, edit <code>conf/local.conf</code>:</p> <pre><code># For continuous/rolling releases\nCALCULINUX_FEED_SUBFOLDER = \"continuous\"\n\n# For stable releases\nCALCULINUX_FEED_SUBFOLDER = \"release\"\n</code></pre>"},{"location":"developer/building/#complete-build-configuration-example","title":"Complete Build Configuration Example","text":"<p>For a development build:</p> <pre><code># conf/local.conf\nDISTRO_CODENAME = \"develop\"\nCALCULINUX_FEED_SUBFOLDER = \"continuous\"\n</code></pre> <p>For a release build:</p> <pre><code># conf/local.conf\nDISTRO_CODENAME = \"walnascar\"\nCALCULINUX_FEED_SUBFOLDER = \"release\"\n</code></pre>"},{"location":"developer/building/#build-targets","title":"Build Targets","text":"<p>Calculinux provides several build targets:</p>"},{"location":"developer/building/#main-image","title":"Main Image","text":"<pre><code>bitbake calculinux-image\n</code></pre> <p>The primary Calculinux image with desktop environment and applications.</p>"},{"location":"developer/building/#minimal-image","title":"Minimal Image","text":"<pre><code>bitbake calculinux-image-minimal\n</code></pre> <p>A minimal base system without desktop environment.</p>"},{"location":"developer/building/#sdk","title":"SDK","text":"<pre><code>bitbake calculinux-image -c populate_sdk\n</code></pre> <p>Generates a cross-compilation SDK for application development.</p>"},{"location":"developer/building/#build-options","title":"Build Options","text":""},{"location":"developer/building/#clean-build","title":"Clean Build","text":"<p>To perform a clean build:</p> <pre><code># Clean everything\nbitbake -c cleanall calculinux-image\n\n# Clean specific package\nbitbake -c cleanall &lt;package-name&gt;\n</code></pre>"},{"location":"developer/building/#parallel-builds","title":"Parallel Builds","text":"<p>Configure parallel builds in <code>conf/local.conf</code>:</p> <pre><code># Number of parallel BitBake tasks\nBB_NUMBER_THREADS ?= \"8\"\n\n# Number of parallel make tasks\nPARALLEL_MAKE ?= \"-j 8\"\n</code></pre> <p>Adjust numbers based on your CPU cores and available RAM.</p>"},{"location":"developer/building/#disk-space-management","title":"Disk Space Management","text":"<p>Monitor disk usage:</p> <pre><code># Check build directory size\ndu -sh build/tmp\n\n# Clean shared state cache\nrm -rf build/sstate-cache/*\n\n# Clean downloads (only if needed)\nrm -rf build/downloads/*\n</code></pre>"},{"location":"developer/building/#build-output","title":"Build Output","text":"<p>After a successful build, find images in:</p> <pre><code>build/tmp/deploy/images/luckfox-lyra/\n</code></pre> <p>Key files:</p> <ul> <li><code>calculinux-image-*.wic.gz</code> - Flashable SD card image</li> <li><code>calculinux-image-*.tar.gz</code> - Root filesystem archive</li> <li><code>calculinux-image-*.manifest</code> - List of installed packages</li> </ul>"},{"location":"developer/building/#flashing-the-image","title":"Flashing the Image","text":""},{"location":"developer/building/#to-sd-card-linux","title":"To SD Card (Linux)","text":"<pre><code># Decompress the image\ngunzip calculinux-image-*.wic.gz\n\n# Flash to SD card (replace /dev/sdX with your card)\nsudo dd if=calculinux-image-*.wic of=/dev/sdX bs=4M status=progress\nsudo sync\n</code></pre>"},{"location":"developer/building/#to-sd-card-cross-platform","title":"To SD Card (Cross-platform)","text":"<p>Use Etcher or Raspberry Pi Imager with the <code>.wic.gz</code> file.</p>"},{"location":"developer/building/#cicd-integration","title":"CI/CD Integration","text":"<p>Calculinux uses GitHub Actions for automated builds. The CI system automatically:</p> <ol> <li>Detects the branch or tag being built</li> <li>Sets appropriate <code>DISTRO_CODENAME</code> and <code>CALCULINUX_FEED_SUBFOLDER</code></li> <li>Builds the image</li> <li>Publishes packages to the correct feed location</li> <li>Uploads build artifacts</li> </ol>"},{"location":"developer/building/#ci-configuration-files","title":"CI Configuration Files","text":"<p>The build behavior is controlled by:</p> <ul> <li><code>.github/workflows/build.yml</code> - Main CI workflow</li> <li><code>conf/auto.conf</code> - Auto-generated build configuration</li> <li><code>conf/calculinux.conf</code> - Distribution configuration</li> </ul>"},{"location":"developer/building/#package-feed-publishing","title":"Package Feed Publishing","text":"<p>After building, packages can be published to the opkg feed:</p> <pre><code># Upload to continuous feed (development)\nrsync -avz tmp/deploy/ipk/ \\\n  user@opkg.calculinux.org:/var/www/opkg/ipk/walnascar/continuous/\n\n# Upload to release feed (stable)\nrsync -avz tmp/deploy/ipk/ \\\n  user@opkg.calculinux.org:/var/www/opkg/ipk/walnascar/release/\n</code></pre> <p>The CI system handles this automatically for official builds.</p>"},{"location":"developer/building/#troubleshooting","title":"Troubleshooting","text":""},{"location":"developer/building/#build-failures","title":"Build Failures","text":"<p>If a build fails:</p> <ol> <li>Check the error message in the build log</li> <li>Clean the failing package: <code>bitbake -c cleanall &lt;package&gt;</code></li> <li>Retry the build</li> <li>Check Common Issues</li> </ol>"},{"location":"developer/building/#disk-space-issues","title":"Disk Space Issues","text":"<p>If you run out of disk space:</p> <pre><code># Remove old build artifacts\nbitbake -c clean calculinux-image\n\n# Clear shared state cache\nrm -rf build/sstate-cache/*\n</code></pre>"},{"location":"developer/building/#network-issues","title":"Network Issues","text":"<p>If downloads fail:</p> <pre><code># Use mirrors\n# Add to conf/local.conf:\nPREMIRRORS_prepend = \"\\\n  git://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \\n \\\n  ftp://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \\n \\\n  http://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \\n \\\n  https://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \\n\"\n</code></pre>"},{"location":"developer/building/#next-steps","title":"Next Steps","text":"<ul> <li>Customizing Images - Learn how to customize your build</li> <li>Adding Packages - Add your own packages</li> <li>Kernel Development - Customize the kernel</li> <li>Release Process - Create official releases</li> </ul>"},{"location":"developer/building/#see-also","title":"See Also","text":"<ul> <li>Yocto Project Documentation</li> <li>BitBake User Manual</li> <li>Package Management Guide - Using opkg feeds</li> </ul>"},{"location":"developer/contributing/","title":"Contributing","text":"<p>Guidelines for contributing to the Calculinux project.</p>"},{"location":"developer/contributing/#getting-started","title":"Getting Started","text":"<p>How to start contributing to Calculinux.</p>"},{"location":"developer/contributing/#code-contributions","title":"Code Contributions","text":"<p>Guidelines for code contributions.</p>"},{"location":"developer/contributing/#documentation-contributions","title":"Documentation Contributions","text":"<p>How to improve documentation.</p>"},{"location":"developer/contributing/#testing-and-bug-reports","title":"Testing and Bug Reports","text":"<p>Reporting bugs and testing procedures.</p>"},{"location":"developer/contributing/#development-workflow","title":"Development Workflow","text":"<p>Git workflow and development process.</p> <p>This page is under development and will be populated with detailed contribution guidelines.</p>"},{"location":"developer/overview/","title":"Developer Overview","text":"<p>Welcome to the Calculinux developer documentation! This section covers everything you need to know to build, customize, and contribute to Calculinux.</p>"},{"location":"developer/overview/#what-youll-learn","title":"What You'll Learn","text":"<p>This developer guide covers:</p> <ul> <li>Setting up the Yocto build environment</li> <li>Building Calculinux from source</li> <li>Customizing images and configurations</li> <li>Adding packages and applications</li> <li>Kernel and driver development</li> <li>Contributing to the project</li> <li>Release processes</li> </ul>"},{"location":"developer/overview/#who-this-guide-is-for","title":"Who This Guide Is For","text":"<p>This guide is for:</p> <ul> <li>Developers wanting to build Calculinux from source</li> <li>Contributors interested in improving Calculinux</li> <li>Customizers needing specific configurations</li> <li>Maintainers managing their own distributions</li> <li>Learners exploring embedded Linux development</li> </ul>"},{"location":"developer/overview/#prerequisites","title":"Prerequisites","text":""},{"location":"developer/overview/#knowledge-requirements","title":"Knowledge Requirements","text":"<p>You should be familiar with:</p> <ul> <li>Linux command line - Basic shell operations</li> <li>Git - Version control basics</li> <li>Make/build systems - Compilation processes</li> <li>C/C++ (for kernel/driver work)</li> <li>Python (helpful for Yocto recipes)</li> </ul>"},{"location":"developer/overview/#system-requirements","title":"System Requirements","text":"<p>For building Calculinux, you need:</p> Requirement Minimum Recommended OS Linux (Ubuntu 20.04+) Linux (Ubuntu 22.04 LTS) CPU 4 cores 8+ cores RAM 8 GB 16+ GB Disk Space 50 GB 100+ GB (SSD preferred) Internet Required Fast connection <p>Why Linux?</p> <p>While Yocto can run in VMs or containers on other OSes, native Linux is strongly recommended for performance and compatibility.</p>"},{"location":"developer/overview/#calculinux-architecture","title":"Calculinux Architecture","text":""},{"location":"developer/overview/#overview","title":"Overview","text":"<p>Calculinux is built using the Yocto Project, a powerful framework for creating custom Linux distributions.</p> <pre><code>Calculinux Architecture:\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        Applications                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502     Desktop Environment (Optional)  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      Package Management (opkg)      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502         System Libraries            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502        Linux Kernel 5.10.x          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502         U-Boot Bootloader           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    Hardware (Luckfox Lyra/RV1106)   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"developer/overview/#key-components","title":"Key Components","text":"<p>meta-calculinux - Main Yocto layer for Calculinux - Machine configurations - Custom recipes and patches - Image definitions</p> <p>Linux Kernel - Based on Rockchip 5.10 kernel - Custom drivers (display, keyboard) - Device tree configurations - Hardware support</p> <p>Bootloader - U-Boot for RV1106 - Boot scripts - Device tree selection</p> <p>Userspace - Based on OpenEmbedded core - Package management (opkg) - System services (systemd) - Optional desktop environments</p>"},{"location":"developer/overview/#repository-structure","title":"Repository Structure","text":"<p>Documentation Needs Update</p> <p>This section contains outdated information and is being revised to reflect the actual multi-layer Yocto structure. See meta-calculinux README for current structure.</p>"},{"location":"developer/overview/#main-repository","title":"Main Repository","text":"<p>The meta-calculinux repository uses a multi-layer Yocto structure:</p> <pre><code>meta-calculinux/\n\u251c\u2500\u2500 meta-calculinux-distro/      # Distribution layer\n\u2502   \u251c\u2500\u2500 conf/distro/\n\u2502   \u2502   \u2514\u2500\u2500 calculinux-distro.conf\n\u2502   \u251c\u2500\u2500 recipes-bsp/\n\u2502   \u251c\u2500\u2500 recipes-connectivity/\n\u2502   \u251c\u2500\u2500 recipes-core/\n\u2502   \u2502   \u251c\u2500\u2500 image/calculinux-image.bb\n\u2502   \u2502   \u2514\u2500\u2500 bundles/calculinux-bundle.bb\n\u2502   \u251c\u2500\u2500 recipes-extended/\n\u2502   \u2514\u2500\u2500 recipes-support/\n\u251c\u2500\u2500 meta-picocalc-bsp-rockchip/  # Hardware BSP layer\n\u2502   \u251c\u2500\u2500 conf/machine/\n\u2502   \u2502   \u2514\u2500\u2500 luckfox-lyra.conf\n\u2502   \u251c\u2500\u2500 recipes-bsp/\n\u2502   \u2502   \u2514\u2500\u2500 u-boot/\n\u2502   \u2514\u2500\u2500 recipes-kernel/\n\u2502       \u2514\u2500\u2500 linux/linux-rockchip_6.1.bbappend\n\u251c\u2500\u2500 meta-calculinux-apps/        # Applications layer\n\u2502   \u251c\u2500\u2500 recipes-connectivity/\n\u2502   \u2502   \u2514\u2500\u2500 zerotier-one/\n\u2502   \u2514\u2500\u2500 recipes-core/\n\u2502       \u2514\u2500\u2500 packagegroups/\n\u251c\u2500\u2500 kas-luckfox-lyra-bundle.yaml # KAS build configuration\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"developer/overview/#external-dependencies","title":"External Dependencies","text":"<p>Calculinux uses external repositories for kernel and bootloader sources:</p> <ul> <li>Kernel: <code>github.com/0xd61/luckfox-linux-6.1-rk3506.git</code> (via linux-rockchip recipe)</li> <li>Bootloader: Provided by meta-rockchip layer</li> <li>Documentation: This repository (github.com/Calculinux/docs)</li> </ul>"},{"location":"developer/overview/#development-workflow","title":"Development Workflow","text":""},{"location":"developer/overview/#typical-development-process","title":"Typical Development Process","text":"<ol> <li>Set up environment - Install dependencies, clone repos</li> <li>Configure build - Select machine, distro, image</li> <li>Build image - Run bitbake to compile everything</li> <li>Test on device - Flash to SD card, boot, verify</li> <li>Iterate - Make changes, rebuild, test again</li> <li>Submit changes - Create pull request</li> </ol>"},{"location":"developer/overview/#build-types","title":"Build Types","text":"<p>Full Build (Clean) - First build or major changes - Builds everything from scratch - Takes 2-8 hours depending on hardware - Uses significant disk space</p> <p>Incremental Build - Rebuilds only changed components - Much faster (minutes to hour) - Used for development iterations</p> <p>Package Build - Builds specific packages - Quick testing of changes - Useful for recipe development</p>"},{"location":"developer/overview/#getting-started","title":"Getting Started","text":""},{"location":"developer/overview/#quick-start-for-developers","title":"Quick Start for Developers","text":"<p>If you're ready to start developing:</p> <ol> <li>Yocto Setup - Install dependencies and configure environment</li> <li>Building Calculinux - Compile your first image</li> <li>Customization - Tailor Calculinux to your needs</li> <li>Adding Packages - Include new software</li> </ol>"},{"location":"developer/overview/#learning-path","title":"Learning Path","text":"<p>Beginner (New to Yocto): 1. Read Yocto Project documentation 2. Follow our Yocto Setup guide 3. Build a stock image 4. Make small customizations</p> <p>Intermediate (Some Yocto experience): 1. Clone meta-calculinux 2. Customize image configurations 3. Add new packages/recipes 4. Modify existing recipes</p> <p>Advanced (Experienced with Yocto): 1. Kernel development 2. Driver development 3. BSP modifications 4. Architecture contributions</p>"},{"location":"developer/overview/#development-tools","title":"Development Tools","text":""},{"location":"developer/overview/#required-tools","title":"Required Tools","text":"<p>Installed via package manager:</p> <pre><code># Ubuntu/Debian\nsudo apt install gawk wget git diffstat unzip texinfo \\\n    gcc build-essential chrpath socat cpio python3 \\\n    python3-pip python3-pexpect xz-utils debianutils \\\n    iputils-ping python3-git python3-jinja2 libegl1-mesa \\\n    libsdl1.2-dev pylint3 xterm python3-subunit mesa-common-dev \\\n    zstd liblz4-tool\n</code></pre>"},{"location":"developer/overview/#helpful-tools","title":"Helpful Tools","text":"<p>Development aids:</p> <ul> <li>devtool - Yocto development tool for recipes</li> <li>bitbake - Build engine</li> <li>runqemu - QEMU emulation (limited use for ARM)</li> <li>oe-pkgdata-util - Package data queries</li> <li>bitbake-layers - Layer management</li> </ul>"},{"location":"developer/overview/#editor-setup","title":"Editor Setup","text":"<p>Recommended editors with Yocto support:</p> <ul> <li>VS Code - With Yocto/BitBake extensions</li> <li>Vim/Neovim - With syntax highlighting</li> <li>Emacs - With bitbake-mode</li> </ul>"},{"location":"developer/overview/#build-system-overview","title":"Build System Overview","text":""},{"location":"developer/overview/#yoctoopenembedded","title":"Yocto/OpenEmbedded","text":"<p>Calculinux uses Yocto for several reasons:</p> <p>Advantages: - \u2705 Reproducible builds - \u2705 Extensive package ecosystem - \u2705 Professional tooling - \u2705 Active community - \u2705 Long-term support - \u2705 Customization flexibility</p> <p>Challenges: - \u26a0\ufe0f Steep learning curve - \u26a0\ufe0f Long initial build times - \u26a0\ufe0f Large disk space requirements - \u26a0\ufe0f Complex dependency management</p>"},{"location":"developer/overview/#bitbake","title":"BitBake","text":"<p>BitBake is the build engine:</p> <ul> <li>Task execution</li> <li>Dependency resolution</li> <li>Parallel builds</li> <li>Caching/reuse</li> </ul>"},{"location":"developer/overview/#recipes","title":"Recipes","text":"<p>Recipes define how to build packages:</p> <pre><code># Example recipe structure\nSUMMARY = \"Example package\"\nLICENSE = \"MIT\"\nSRC_URI = \"https://example.com/package.tar.gz\"\n\ndo_compile() {\n    # Compilation steps\n}\n\ndo_install() {\n    # Installation steps\n}\n</code></pre>"},{"location":"developer/overview/#common-development-tasks","title":"Common Development Tasks","text":"<p>Examples Need Verification</p> <p>The following examples use placeholder names and need to be updated with actual Calculinux recipe names and tested commands.</p>"},{"location":"developer/overview/#adding-a-package","title":"Adding a Package","text":"<pre><code># Create new recipe\ndevtool add &lt;package-name&gt; &lt;source-url&gt;\n\n# Test build\ndevtool build &lt;package-name&gt;\n\n# Create recipe\ndevtool finish &lt;package-name&gt; meta-calculinux\n</code></pre>"},{"location":"developer/overview/#modifying-kernel","title":"Modifying Kernel","text":"<pre><code># Extract kernel source (note: actual recipe is linux-rockchip, not linux-calculinux)\nbitbake linux-rockchip -c unpack\n\n# Make changes\ncd tmp/work/.../linux-rockchip/.../git\n\n# Rebuild\nbitbake linux-rockchip -c compile -f\n</code></pre>"},{"location":"developer/overview/#creating-custom-image","title":"Creating Custom Image","text":"<pre><code># recipes-core/images/calculinux-custom.bb\n# Note: Only calculinux-image.bb and calculinux-bundle.bb currently exist\nrequire calculinux-image.bb\n\nIMAGE_INSTALL += \"mypackage another-package\"\n</code></pre>"},{"location":"developer/overview/#testing-validation","title":"Testing &amp; Validation","text":""},{"location":"developer/overview/#build-testing","title":"Build Testing","text":"<p>Example Uses Non-existent Images</p> <p>Only <code>calculinux-image</code> and <code>calculinux-bundle</code> targets currently exist. Examples below need verification.</p> <pre><code># Build main image\nbitbake calculinux-image\n\n# Build update bundle\nbitbake calculinux-bundle\n\n# Verify package contents\noe-pkgdata-util list-pkgs\n</code></pre>"},{"location":"developer/overview/#runtime-testing","title":"Runtime Testing","text":"<ol> <li>Flash image to SD card</li> <li>Boot on PicoCalc</li> <li>Verify functionality</li> <li>Check logs: <code>journalctl -b</code></li> <li>Test applications</li> </ol>"},{"location":"developer/overview/#automated-testing","title":"Automated Testing","text":"<p>Coming soon: CI/CD pipeline for automated builds and tests.</p>"},{"location":"developer/overview/#performance-optimization","title":"Performance Optimization","text":""},{"location":"developer/overview/#build-speed","title":"Build Speed","text":"<p>Parallel Builds: <pre><code># local.conf\nBB_NUMBER_THREADS = \"8\"\nPARALLEL_MAKE = \"-j 8\"\n</code></pre></p> <p>Shared State Cache: <pre><code>SSTATE_DIR = \"/path/to/shared/sstate-cache\"\n</code></pre></p> <p>Build History: <pre><code>INHERIT += \"buildhistory\"\nBUILDHISTORY_COMMIT = \"1\"\n</code></pre></p>"},{"location":"developer/overview/#image-size","title":"Image Size","text":"<p>Optimize for small SD cards:</p> <pre><code># Remove documentation\nIMAGE_FEATURES_remove = \"doc-pkgs\"\n\n# Remove development files\nIMAGE_FEATURES_remove = \"dev-pkgs\"\n\n# Minimize locales\nIMAGE_LINGUAS = \"en-us\"\n</code></pre>"},{"location":"developer/overview/#debugging","title":"Debugging","text":""},{"location":"developer/overview/#build-failures","title":"Build Failures","text":"<pre><code># Verbose output\nbitbake -v calculinux-base\n\n# Debug specific task\nbitbake -c devshell &lt;package&gt;\n\n# Clean and rebuild\nbitbake -c cleansstate &lt;package&gt;\nbitbake &lt;package&gt;\n</code></pre>"},{"location":"developer/overview/#runtime-debugging","title":"Runtime Debugging","text":"<pre><code># Serial console\nscreen /dev/ttyUSB0 115200\n\n# SSH access\nssh root@&lt;ip-address&gt;\n\n# System logs\njournalctl -f\n</code></pre>"},{"location":"developer/overview/#contributing","title":"Contributing","text":"<p>We welcome contributions! See Contributing Guide for:</p> <ul> <li>Code style guidelines</li> <li>Submission process</li> <li>Review process</li> <li>Community standards</li> </ul>"},{"location":"developer/overview/#resources","title":"Resources","text":""},{"location":"developer/overview/#official-documentation","title":"Official Documentation","text":"<ul> <li>Yocto Project: https://www.yoctoproject.org/docs/</li> <li>OpenEmbedded: https://www.openembedded.org/</li> <li>BitBake Manual: https://docs.yoctoproject.org/bitbake/</li> </ul>"},{"location":"developer/overview/#calculinux-specific","title":"Calculinux Specific","text":"<ul> <li>Repository: https://github.com/Calculinux/meta-calculinux</li> <li>Issues: GitHub Issues</li> <li>Discussions: Forum Thread</li> </ul>"},{"location":"developer/overview/#learning-resources","title":"Learning Resources","text":"<ul> <li>Yocto Project Quick Start</li> <li>Yocto Project Mega-Manual</li> <li>OpenEmbedded User Manual</li> <li>Linux From Scratch (background)</li> </ul>"},{"location":"developer/overview/#next-steps","title":"Next Steps","text":"<p>Choose your path:</p> <ul> <li> <p> Set Up Environment</p> <p>Install tools and configure Yocto</p> <p> Yocto Setup</p> </li> <li> <p> Build Calculinux</p> <p>Compile your first image</p> <p> Building Guide</p> </li> <li> <p> Customize</p> <p>Make Calculinux your own</p> <p> Customization</p> </li> <li> <p> Contribute</p> <p>Join the development effort</p> <p> Contributing</p> </li> </ul>"},{"location":"developer/yocto-setup/","title":"Yocto Setup","text":"<p>Setting up the Yocto build environment for Calculinux development.</p>"},{"location":"developer/yocto-setup/#prerequisites","title":"Prerequisites","text":"<p>System requirements and dependencies.</p>"},{"location":"developer/yocto-setup/#environment-setup","title":"Environment Setup","text":"<p>Step-by-step Yocto environment configuration.</p>"},{"location":"developer/yocto-setup/#initial-configuration","title":"Initial Configuration","text":"<p>First-time setup instructions.</p>"},{"location":"developer/yocto-setup/#troubleshooting-setup-issues","title":"Troubleshooting Setup Issues","text":"<p>Common setup problems and solutions.</p> <p>This page is under development and will be populated with detailed Yocto setup instructions.</p>"},{"location":"getting-started/first-boot/","title":"First Boot","text":"<p>Guide for the first boot and initial configuration of Calculinux.</p>"},{"location":"getting-started/first-boot/#booting-for-the-first-time","title":"Booting for the First Time","text":"<p>After flashing your SD card and installing hardware:</p> <ol> <li>Insert SD card into Luckfox Lyra</li> <li>Connect USB-C power (5V/2A minimum)</li> <li>Wait for boot (30-60 seconds first time)</li> </ol>"},{"location":"getting-started/first-boot/#what-to-expect","title":"What to Expect","text":"<p>Boot Process: - Power LED lights up - Boot messages appear on display - System initialization - Login prompt appears</p> <p>First Boot Timing: - First boot: 30-60 seconds - Subsequent boots: 15-30 seconds</p>"},{"location":"getting-started/first-boot/#initial-login","title":"Initial Login","text":""},{"location":"getting-started/first-boot/#default-credentials","title":"Default Credentials","text":"<pre><code>Username: root\nPassword: root\n</code></pre> <p>Change Password Immediately</p> <p>The first thing you should do after logging in is change the root password: <pre><code>passwd\n</code></pre></p>"},{"location":"getting-started/first-boot/#initial-configuration","title":"Initial Configuration","text":""},{"location":"getting-started/first-boot/#1-change-root-password","title":"1. Change Root Password","text":"<pre><code>passwd\n# Enter new password twice\n</code></pre>"},{"location":"getting-started/first-boot/#2-set-system-time","title":"2. Set System Time","text":"<pre><code># Set current date/time\ndate -s \"2025-10-06 14:30:00\"\n\n# Or use NTP if network connected\nntpd -q -p pool.ntp.org\n</code></pre>"},{"location":"getting-started/first-boot/#3-check-system-status","title":"3. Check System Status","text":"<pre><code># Check system info\nuname -a\n\n# Check memory\nfree -h\n\n# Check disk space\ndf -h\n\n# Check running services\nsystemctl status\n</code></pre>"},{"location":"getting-started/first-boot/#4-filesystem-expansion-automatic","title":"4. Filesystem Expansion (Automatic)","text":"<p>Automatic Expansion</p> <p>The overlayfs partition is automatically expanded during the pre-init process on first boot. The system uses <code>growpart</code> to expand the overlay partition to fill available disk space, leaving 10% free. No manual intervention is required.</p>"},{"location":"getting-started/first-boot/#5-update-package-database","title":"5. Update Package Database","text":"<pre><code>opkg update\n</code></pre>"},{"location":"getting-started/first-boot/#basic-system-check","title":"Basic System Check","text":""},{"location":"getting-started/first-boot/#verify-hardware","title":"Verify Hardware","text":"<pre><code># Check display\nls -l /dev/fb0\ncat /dev/urandom &gt; /dev/fb0  # Should show random colors\n\n# Check keyboard\ncat /proc/bus/input/devices\n\n# Check CPU\ncat /proc/cpuinfo\n\n# Check USB WiFi adapter (if connected)\nlsusb\nip link show\n</code></pre>"},{"location":"getting-started/first-boot/#supported-peripherals","title":"Supported Peripherals","text":"<p>Hardware Expansion</p> <p>The PicoCalc and Luckfox Lyra do not include WiFi or many peripherals by default. Hardware can be added via USB, I2C, SPI, and GPIO headers.</p> <p>Currently Tested: - Display (built-in LCD drivers) - Keyboard (built-in keyboard drivers) - USB WiFi adapters (see WiFi chipsets above)</p> <p>Planned/Future Support: - I2C RTC modules (e.g., Adafruit DS3231) - LoRa radio modules (e.g., Waveshare Core1262-868M for Meshtastic) - Additional I2C/SPI peripherals</p> <p>Peripheral Testing</p> <p>Most peripheral support beyond WiFi, display, and keyboard has not been thoroughly tested yet. Community contributions for additional hardware support are welcome!</p>"},{"location":"getting-started/first-boot/#check-logs","title":"Check Logs","text":"<pre><code># Boot messages\ndmesg | less\n\n# System journal\njournalctl -b\n</code></pre>"},{"location":"getting-started/first-boot/#network-configuration","title":"Network Configuration","text":""},{"location":"getting-started/first-boot/#wifi-setup-usb-adapter-required","title":"WiFi Setup (USB Adapter Required)","text":"<p>WiFi Hardware Required</p> <p>Neither the PicoCalc nor Luckfox Lyra include built-in WiFi. You need a USB WiFi adapter operating at 3.3V connected to the USB header on the Lyra.</p> <p>Supported WiFi Chipsets:</p> <p>Calculinux includes drivers for the following Realtek chipsets:</p> <ul> <li>RTL8723DU</li> <li>RTL8812AU</li> <li>RTL8814AU</li> <li>RTL8821CU</li> <li>RTL88X2BU</li> </ul>"},{"location":"getting-started/first-boot/#connecting-to-wifi-with-iwctl","title":"Connecting to WiFi with iwctl","text":"<p>Calculinux uses <code>iwd</code> (iNet Wireless Daemon) for WiFi management. Use <code>iwctl</code> to configure wireless connections:</p> <pre><code># Start iwctl interactive mode\niwctl\n\n# Inside iwctl:\n[iwd]# device list                          # List wireless devices\n[iwd]# station wlan0 scan                   # Scan for networks\n[iwd]# station wlan0 get-networks           # Show available networks\n[iwd]# station wlan0 connect \"SSID\"         # Connect to network\n# Enter passphrase when prompted\n[iwd]# exit\n\n# Or use iwctl non-interactively:\niwctl station wlan0 scan\niwctl station wlan0 get-networks\niwctl station wlan0 connect \"YourSSID\"\n</code></pre> <p>Verify Connection:</p> <pre><code># Check connection status\niwctl station wlan0 show\n\n# Check IP address\nip addr show wlan0\n\n# Test connectivity\nping -c 3 8.8.8.8\n</code></pre> <p>Disconnect:</p> <pre><code>iwctl station wlan0 disconnect\n</code></pre>"},{"location":"getting-started/first-boot/#via-ethernet","title":"Via Ethernet","text":"<p>The Luckfox Lyra has an Ethernet interface. Network configuration is handled by systemd-networkd:</p> <pre><code># Check interface status\nip addr show\nnetworkctl status\n\n# DHCP is configured automatically via systemd-networkd\n# Check network configuration\nnetworkctl list\n</code></pre> <p>For persistent network configuration, edit systemd-networkd files in <code>/etc/systemd/network/</code>.</p>"},{"location":"getting-started/first-boot/#next-steps","title":"Next Steps","text":"<p>After initial setup:</p> <ul> <li>Follow Quick Start Guide</li> <li>Learn Basic Usage</li> <li>Install Applications</li> </ul>"},{"location":"getting-started/first-boot/#troubleshooting-first-boot","title":"Troubleshooting First Boot","text":""},{"location":"getting-started/first-boot/#no-display","title":"No Display","text":"<ul> <li>Wait 2-3 minutes</li> <li>Check power supply</li> <li>Verify SD card inserted correctly</li> <li>See Boot Problems</li> </ul>"},{"location":"getting-started/first-boot/#boot-hangs","title":"Boot Hangs","text":"<ul> <li>SPI NAND not erased (most common)</li> <li>Corrupt SD card</li> <li>Insufficient power</li> <li>See Troubleshooting</li> </ul>"},{"location":"getting-started/first-boot/#cannot-login","title":"Cannot Login","text":"<ul> <li>Verify correct username: <code>root</code></li> <li>Verify correct password: <code>calculinux</code></li> <li>Try different keyboard</li> <li>Check keyboard driver in logs</li> </ul>"},{"location":"getting-started/first-boot/#getting-help","title":"Getting Help","text":"<ul> <li>Check Troubleshooting</li> <li>Visit Community Forum</li> <li>Open GitHub Issue</li> </ul>"},{"location":"getting-started/hardware-requirements/","title":"Hardware Requirements","text":"<p>This page outlines the hardware required to run Calculinux.</p>"},{"location":"getting-started/hardware-requirements/#required-hardware","title":"Required Hardware","text":""},{"location":"getting-started/hardware-requirements/#essential-components","title":"Essential Components","text":"Component Requirement Notes PicoCalc Device Base model The handheld computer shell and display Luckfox Lyra SBC RK3506G2-based Replaces stock RP2040 board MicroSD Card 8GB+ (16GB+ recommended) For OS storage USB-C Cable Data-capable For power and connectivity Power Supply 5V/2A minimum 2A or higher recommended"},{"location":"getting-started/hardware-requirements/#luckfox-lyra-specifications","title":"Luckfox Lyra Specifications","text":"<p>Supported Luckfox Lyra configuration: - RAM: 128MB (only available and tested configuration) - SoC: Rockchip RK3506G2 - Storage: SD card (some models include SPI NAND that must be erased)</p>"},{"location":"getting-started/hardware-requirements/#recommended-configurations","title":"Recommended Configurations","text":""},{"location":"getting-started/hardware-requirements/#budget-configuration","title":"Budget Configuration","text":"<ul> <li>Luckfox Lyra 128MB (basic)</li> <li>16GB Class 10 SD card</li> <li>Use Case: Console, scripting, development</li> <li>Cost: ~$30-40</li> </ul>"},{"location":"getting-started/hardware-requirements/#standard-configuration","title":"Standard Configuration","text":"<ul> <li>Luckfox Lyra 128MB</li> <li>32GB UHS-I SD card</li> <li>Use Case: Console with more storage for applications</li> <li>Cost: ~$45-60</li> </ul>"},{"location":"getting-started/hardware-requirements/#advanced-configuration","title":"Advanced Configuration","text":"<ul> <li>Luckfox Lyra 128MB</li> <li>64GB UHS-I SD card</li> <li>Powered USB hub + peripherals</li> <li>Second USB-C cable (for serial console access)</li> <li>Use Case: Console development, experimentation</li> <li>Cost: ~$60-80</li> </ul> <p>Serial Console for Development</p> <p>A second USB-C cable connected to the PicoCalc's USB-C port (not the Lyra's port) provides serial console access at 1500000 baud. This is invaluable for:</p> <ul> <li>Watching boot messages and kernel output</li> <li>Debugging firmware and kernel driver modifications</li> <li>Troubleshooting hardware issues</li> <li>Development work requiring low-level system access</li> </ul> <p>Graphical Desktop Experimentation</p> <p>While Calculinux is console-only by default, users may experiment with lightweight graphical environments. However, the 128MB RAM is a significant limiting factor for desktop use. Community experimentation is encouraged!</p>"},{"location":"getting-started/hardware-requirements/#optional-hardware","title":"Optional Hardware","text":"<p>USB Peripheral Limitations</p> <p>The Lyra USB-C port supports USB OTG, but has important limitations:</p> <ul> <li>Voltage Requirement: USB devices must operate at 3.3V or use an externally powered hub</li> <li>Tested Hardware: Only internal USB WiFi adapter (3.3V) has been confirmed working</li> <li>Untested Peripherals: External USB devices (keyboards, ethernet adapters, storage) have not been tested</li> <li>Recommendation: Use an externally powered USB hub for any external USB peripherals</li> </ul>"},{"location":"getting-started/hardware-requirements/#tested-hardware","title":"Tested Hardware","text":"<ul> <li>WiFi Adapter (3.3V, internal USB header) - \u2705 Confirmed working</li> <li>External SD Card (PicoCalc's built-in SD slot) - \u2705 Confirmed working</li> </ul> <p>External SD Card Expansion</p> <p>The PicoCalc includes a built-in SD card slot that can be used for additional storage. This slot is accessed over SPI and is therefore slower than the main internal SD card, but it's excellent for mass storage of files, media, or backups.</p>"},{"location":"getting-started/hardware-requirements/#untested-hardware","title":"Untested Hardware","text":"<p>The following peripherals may work but have not been tested and likely require a powered USB hub:</p> <ul> <li>USB keyboard</li> <li>USB Ethernet adapter</li> <li>USB storage devices</li> <li>Other USB peripherals</li> </ul> <p>Luckfox Lyra Plus Ethernet</p> <p>The Luckfox Lyra Plus includes a built-in Ethernet port, but this model has not been tested with Calculinux and would require a custom backplate to access the port within the PicoCalc enclosure.</p> <p>Other Luckfox Lyra Models</p> <p>Other Luckfox Lyra models exist with different RAM configurations (64MB, 256MB), but these have different pinouts from the 128MB model and would require a custom adapter board to be compatible with the PicoCalc. Only the 128MB model with the standard pinout is currently supported.</p>"},{"location":"getting-started/hardware-requirements/#compatibility","title":"Compatibility","text":"<p>See Compatibility Matrix for detailed hardware compatibility information.</p>"},{"location":"getting-started/hardware-requirements/#next-steps","title":"Next Steps","text":"<ul> <li>Review Luckfox Lyra details</li> <li>Check Installation Guide</li> <li>Learn about Hardware Modifications</li> </ul>"},{"location":"getting-started/installation/","title":"Installation Guide","text":"<p>This guide covers how to install Calculinux on your PicoCalc with Luckfox Lyra SBC.</p>"},{"location":"getting-started/installation/#overview","title":"Overview","text":"<p>The installation process involves:</p> <ol> <li>Obtaining the Calculinux image</li> <li>Flashing it to a microSD card</li> <li>Installing the Luckfox Lyra in your PicoCalc (if not already done)</li> <li>Booting the system</li> </ol>"},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<p>Before starting, ensure you have:</p> <ul> <li>\u2705 Luckfox Lyra SBC (installed in PicoCalc)</li> <li>\u2705 MicroSD card (8GB minimum, 16GB+ recommended)</li> <li>\u2705 SD card reader</li> <li>\u2705 Computer (Linux, macOS, or Windows)</li> <li>\u2705 Stable internet connection</li> <li>\u2705 1-2 GB free disk space for image download</li> </ul>"},{"location":"getting-started/installation/#step-1-download-calculinux-image","title":"Step 1: Download Calculinux Image","text":""},{"location":"getting-started/installation/#official-releases","title":"Official Releases","text":"<p>Download the latest Calculinux image from:</p> <p>GitHub Releases: https://github.com/Calculinux/meta-calculinux/releases</p> <p>Download the Calculinux image file:</p> Image Name Description <code>calculinux-image-luckfox-lyra.rootfs.wic.gz</code> Complete Calculinux system image <p>Additional files you may find:</p> File Name Description <code>calculinux-bundle-luckfox-lyra.raucb</code> RAUC update bundle (for updating existing installations) <code>*.manifest</code> Build manifest with package list <p>Single Image Design</p> <p>Calculinux provides a single console-based image suitable for all RAM configurations (64MB, 128MB, 256MB). Additional software can be installed via the package manager as needed.</p>"},{"location":"getting-started/installation/#verify-download","title":"Verify Download","text":"<p>After downloading, verify the image integrity:</p> <pre><code># On Linux/macOS\nsha256sum calculinux-*.img.xz\n\n# On Windows (PowerShell)\nGet-FileHash calculinux-*.img.xz -Algorithm SHA256\n</code></pre> <p>Compare with the SHA256 hash on the release page.</p>"},{"location":"getting-started/installation/#extract-image","title":"Extract Image","text":"<p>If the image is compressed (<code>.xz</code>, <code>.gz</code>, <code>.zip</code>):</p> <pre><code># Linux/macOS with xz\nunxz calculinux-*.img.xz\n\n# Or using 7-Zip on any platform\n7z x calculinux-*.img.xz\n</code></pre>"},{"location":"getting-started/installation/#step-2-flash-sd-card","title":"Step 2: Flash SD Card","text":"<p>Data Loss Warning</p> <p>Flashing will erase all data on the SD card. Make sure you've selected the correct device!</p>"},{"location":"getting-started/installation/#option-a-using-balena-etcher-recommended-for-beginners","title":"Option A: Using Balena Etcher (Recommended for Beginners)","text":"<ol> <li>Download Balena Etcher: https://www.balena.io/etcher/</li> <li>Install and launch Etcher</li> <li>Insert SD card into card reader</li> <li>In Etcher:</li> <li>Click \"Flash from file\" and select Calculinux image</li> <li>Click \"Select target\" and choose your SD card</li> <li>Click \"Flash!\"</li> <li>Wait for completion and verification</li> </ol>"},{"location":"getting-started/installation/#option-b-using-dd-linuxmacos","title":"Option B: Using dd (Linux/macOS)","text":"<p>Dangerous Command</p> <p>Double-check the device name! Using the wrong device will destroy your data.</p> <pre><code># 1. Insert SD card and identify device\nlsblk\n# Look for your SD card (usually /dev/sdX or /dev/mmcblkN)\n\n# 2. Unmount the device if mounted\nsudo umount /dev/sdX*\n\n# 3. Flash the image\nsudo dd if=calculinux-*.img of=/dev/sdX bs=4M status=progress conv=fsync\n\n# 4. Sync to ensure all data is written\nsync\n</code></pre>"},{"location":"getting-started/installation/#option-c-using-rufus-windows","title":"Option C: Using Rufus (Windows)","text":"<ol> <li>Download Rufus: https://rufus.ie/</li> <li>Launch Rufus (may require admin rights)</li> <li>Insert SD card</li> <li>In Rufus:</li> <li>Device: Select your SD card</li> <li>Boot selection: Click \"SELECT\" and choose image</li> <li>Partition scheme: MBR</li> <li>File system: FAT32 (will be overwritten)</li> <li>Click \"START\" and confirm</li> </ol>"},{"location":"getting-started/installation/#option-d-using-win32diskimager-windows","title":"Option D: Using Win32DiskImager (Windows)","text":"<ol> <li>Download: Win32 Disk Imager</li> <li>Install and launch as administrator</li> <li>Insert SD card</li> <li>In Win32DiskImager:</li> <li>Select image file</li> <li>Choose correct device</li> <li>Click \"Write\"</li> <li>Wait for completion</li> </ol>"},{"location":"getting-started/installation/#verify-flashing","title":"Verify Flashing","text":"<p>After flashing:</p> <pre><code># Linux/macOS - verify partition table\nsudo fdisk -l /dev/sdX\n\n# Should show multiple partitions:\n# - Boot partition (FAT32)\n# - Root filesystem (ext4)\n</code></pre>"},{"location":"getting-started/installation/#step-3-hardware-installation","title":"Step 3: Hardware Installation","text":"<p>If you haven't already installed the Luckfox Lyra in your PicoCalc, follow the Hardware Modifications guide.</p> <p>If your Luckfox Lyra has SPI NAND, you must erase it:</p> <pre><code># See Hardware Modifications guide for detailed instructions\n# Or Boot Problems troubleshooting page\n</code></pre> <p>Quick checklist:</p> <ul> <li>[ ] Luckfox Lyra installed in PicoCalc</li> <li>[ ] Connector properly seated</li> <li>[ ] SPI NAND erased (if present)</li> <li>[ ] Case reassembled</li> <li>[ ] SD card inserted in Luckfox Lyra</li> </ul>"},{"location":"getting-started/installation/#step-4-first-boot","title":"Step 4: First Boot","text":"<ol> <li>Insert the flashed SD card into the Luckfox Lyra</li> <li>Connect USB-C power (5V/2A minimum)</li> <li>Power on the device</li> </ol>"},{"location":"getting-started/installation/#what-to-expect","title":"What to Expect","text":"<p>Initial boot timing: - First boot: 30-60 seconds - Subsequent boots: 15-30 seconds</p> <p>Visual indicators: - Power LED should light up - Display may show boot messages - Initial splash screen - Login prompt (console-only, no GUI)</p>"},{"location":"getting-started/installation/#boot-messages","title":"Boot Messages","text":"<p>You should see:</p> <pre><code>[    0.000000] Booting Linux on physical CPU 0x0\n[    0.000000] Linux version 5.10.x-calculinux\n...\n[    5.234567] PicoCalc display initialized\n[    5.345678] PicoCalc keyboard initialized\n...\n\nCalculinux GNU/Linux 1.0 picocalc ttyS0\n\npicocalc login: _\n</code></pre> <p>Success!</p> <p>If you see a login prompt, congratulations! Calculinux is running.</p>"},{"location":"getting-started/installation/#troubleshooting-boot-issues","title":"Troubleshooting Boot Issues","text":"<p>If the system doesn't boot:</p> <p>No display activity: - Check power supply (try different cable/adapter) - Verify SD card is inserted correctly - See Boot Problems</p> <p>Boots but hangs: - Wait 2-3 minutes (first boot may take longer) - Check SD card integrity - Try reflashing the image</p> <p>Display shows errors: - Note the error messages - Check Troubleshooting - Search forum for similar issues</p>"},{"location":"getting-started/installation/#step-5-initial-login","title":"Step 5: Initial Login","text":"<p>Default credentials:</p> <pre><code>Username: root\nPassword: root\n\n-- OR --\n\nUsername: pico\nPassword: calc\n</code></pre> <p>Change Passwords Immediately</p> <p>Both default passwords should be changed immediately after first login: <pre><code># Change root password\npasswd\n\n# Change pico user password\npasswd pico\n</code></pre></p> <p>The <code>pico</code> user is a member of the <code>wheel</code> group and can use <code>sudo</code> for administrative tasks.</p>"},{"location":"getting-started/installation/#post-installation","title":"Post-Installation","text":"<p>After successful login:</p> <ol> <li>Change root password: <code>passwd</code></li> <li>Update system time: <code>date -s \"2025-10-06 12:00:00\"</code></li> <li>Check system: <code>df -h</code> and <code>free -m</code></li> <li>Configure network (if needed): See Networking</li> </ol>"},{"location":"getting-started/installation/#filesystem-expansion-automatic","title":"Filesystem Expansion (Automatic)","text":"<p>No Action Required</p> <p>The overlayfs partition is automatically expanded during first boot to use all available space on your SD card (leaving 10% free). No manual intervention is needed.</p>"},{"location":"getting-started/installation/#multiple-sd-cards","title":"Multiple SD Cards","text":"<p>You can create multiple SD cards for different purposes:</p> <ul> <li>Development: Full tools, larger packages</li> <li>Production: Minimal, stable release</li> <li>Testing: Experimental features</li> <li>Backup: Stable known-good configuration</li> </ul> <p>Just flash different images or clone a working card:</p> <pre><code># Clone a working SD card\nsudo dd if=/dev/sdX of=backup.img bs=4M status=progress\n\n# Later, restore it\nsudo dd if=backup.img of=/dev/sdX bs=4M status=progress\n</code></pre>"},{"location":"getting-started/installation/#pre-installed-software","title":"Pre-Installed Software","text":"<p>Calculinux comes with a console-based environment including:</p>"},{"location":"getting-started/installation/#system-utilities","title":"System Utilities","text":"<ul> <li>Shell: bash, busybox</li> <li>Editors: vi, nano (via opkg)</li> <li>Development: gcc, g++, make, autoconf, git, gdb</li> <li>Package Management: opkg with online repositories</li> </ul>"},{"location":"getting-started/installation/#network-tools","title":"Network Tools","text":"<ul> <li>WiFi: iwd (iwctl command)</li> <li>Utilities: curl, wget, links (text browser), openssh</li> <li>Debugging: iw, htop, systemd-analyze</li> </ul>"},{"location":"getting-started/installation/#system-management","title":"System Management","text":"<ul> <li>Update System: RAUC (A/B partition updates)</li> <li>Storage: e2fsprogs, mtd-utils, cloud-utils-growpart</li> <li>Hardware: i2c-tools, usbutils, android-tools</li> </ul>"},{"location":"getting-started/installation/#additional-features","title":"Additional Features","text":"<ul> <li>Filesystem: Overlayfs for read-only root with persistent overlay</li> <li>Console Font: Terminus font for better readability</li> <li>Keyboard: Full keyboard mapping support</li> </ul> <p>No GUI/Desktop</p> <p>Calculinux is currently console-only with no graphical desktop environment. All interaction is via text terminal. GUI support may be added in future releases.</p> <ul> <li>File manager</li> <li>Basic applications</li> </ul>"},{"location":"getting-started/installation/#customization","title":"Customization","text":"<p>After installation, you can customize your system:</p> <ul> <li>Install additional packages: See Package Management</li> <li>Set up development: See Developer Guide</li> <li>Add applications: See Applications</li> </ul>"},{"location":"getting-started/installation/#building-your-own-image","title":"Building Your Own Image","text":"<p>Instead of using pre-built images, you can build your own:</p> <ol> <li>Follow Yocto Setup</li> <li>Customize configuration</li> <li>Build image: Building Calculinux</li> <li>Flash your custom image</li> </ol>"},{"location":"getting-started/installation/#updating-calculinux","title":"Updating Calculinux","text":"<p>To update an existing installation:</p> <pre><code># Update package database\nopkg update\n\n# Upgrade all packages\nopkg upgrade\n\n# Or see Updates guide\n</code></pre> <p>See Updates for detailed information.</p>"},{"location":"getting-started/installation/#backup-strategies","title":"Backup Strategies","text":"<p>Protect your work:</p>"},{"location":"getting-started/installation/#full-sd-card-backup","title":"Full SD Card Backup","text":"<pre><code># Backup entire SD card\nsudo dd if=/dev/sdX of=calculinux-backup.img bs=4M status=progress\n\n# Compress to save space\ngzip calculinux-backup.img\n</code></pre>"},{"location":"getting-started/installation/#filesystem-backup","title":"Filesystem Backup","text":"<pre><code># Backup home directory\ntar czf home-backup.tar.gz /home\n\n# Backup configuration\ntar czf etc-backup.tar.gz /etc\n</code></pre>"},{"location":"getting-started/installation/#common-installation-issues","title":"Common Installation Issues","text":""},{"location":"getting-started/installation/#sd-card-not-recognized","title":"SD Card Not Recognized","text":"<ul> <li>Try different card reader</li> <li>Test SD card on another device</li> <li>Format card first: <code>sudo mkfs.fat -F 32 /dev/sdX</code></li> </ul>"},{"location":"getting-started/installation/#image-wont-flash","title":"Image Won't Flash","text":"<ul> <li>Verify image integrity (checksum)</li> <li>Try different flashing tool</li> <li>Check SD card isn't write-protected</li> </ul>"},{"location":"getting-started/installation/#boot-loops","title":"Boot Loops","text":"<ul> <li>SPI NAND not erased (most common)</li> <li>Corrupted image</li> <li>Faulty SD card</li> <li>Insufficient power</li> </ul> <p>See Troubleshooting for solutions.</p>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>Now that Calculinux is installed:</p> <ul> <li>Continue to First Boot guide</li> <li>Learn Quick Start basics</li> <li>Explore User Guide</li> </ul>"},{"location":"getting-started/installation/#getting-help","title":"Getting Help","text":"<p>If you encounter problems:</p> <ol> <li>Check Troubleshooting</li> <li>Search Forum</li> <li>Ask in community chat</li> <li>Open GitHub issue</li> </ol> <p>Include in your help request: - Image variant and version - SD card brand/size - Luckfox Lyra version (RAM, NAND) - Exact error messages - What you've already tried</p>"},{"location":"getting-started/overview/","title":"Getting Started with Calculinux","text":"<p>Welcome to Calculinux! This guide will help you get started with your PicoCalc running Linux.</p>"},{"location":"getting-started/overview/#overview","title":"Overview","text":"<p>Calculinux is a Linux distribution built specifically for the PicoCalc handheld computer with Luckfox Lyra SBC. This getting started guide will walk you through everything you need to know to set up and use Calculinux.</p>"},{"location":"getting-started/overview/#what-youll-need","title":"What You'll Need","text":"<p>Before you begin, make sure you have:</p> <ul> <li>\u2705 PicoCalc device</li> <li>\u2705 Luckfox Lyra SBC</li> <li>\u2705 MicroSD card (8GB minimum, 16GB+ recommended)</li> <li>\u2705 SD card reader for your computer</li> <li>\u2705 USB-C cable (to connect the Lyra to your computer to wipe the NAND)</li> <li>\u2705 Computer</li> </ul> <p>Optional but helpful: - Second USB-C cable to monitor the serial console on the Picocalc USB-C port (1500000 Baud) - USB WiFi adapter (3.3V, see supported chipsets in Hardware Compatibility)</p>"},{"location":"getting-started/overview/#quick-start-process","title":"Quick Start Process","text":"<p>Here's the high-level process to get Calculinux running:</p> <ol> <li>Check Hardware Requirements - Verify compatibility</li> <li>Erase NAND Flash (if equipped) - Erase the Lyra's on-board NAND Flash</li> <li>Install Hardware (if needed) - Install Luckfox Lyra in PicoCalc</li> <li>Flash SD Card - Write Calculinux image to SD card</li> <li>First Boot - Power on and complete initial setup</li> <li>Quick Start Guide - Learn basic operations</li> </ol>"},{"location":"getting-started/overview/#time-requirements","title":"Time Requirements","text":"<ul> <li>Hardware Installation: 5-10 minutes</li> <li>Image Flashing: 5-15 minutes (depends on SD card)</li> <li>First Boot: 2-3 minutes</li> <li>Initial Configuration: 10-30 minutes</li> </ul>"},{"location":"getting-started/overview/#skill-level","title":"Skill Level","text":"<p>This guide is written for users with basic to intermediate technical knowledge:</p> <ul> <li>Basic: You can follow written instructions and use a computer</li> <li>Intermediate: Comfortable with command-line interfaces</li> <li>Advanced: Hardware modifications and development</li> </ul> <p>Don't worry!</p> <p>Even if you're new to Linux or embedded systems, the guide provides detailed step-by-step instructions. Take your time and ask for help in the community if needed.</p>"},{"location":"getting-started/overview/#support-channels","title":"Support Channels","text":"<p>If you need help:</p> <ul> <li>\ud83d\udcd6 Check this documentation first</li> <li>\ud83d\udcac ClockworkPi Forum - Active community</li> <li>\ud83d\udc1b GitHub Issues - Bug reports</li> <li>\ud83d\udce7 Community Discord/Matrix (links in Resources)</li> </ul>"},{"location":"getting-started/overview/#what-to-expect","title":"What to Expect","text":""},{"location":"getting-started/overview/#after-installation","title":"After Installation","text":"<p>Once Calculinux is running, you'll have:</p> <ul> <li>Full Linux operating system (console-based)</li> <li>Command-line terminal access via built-in display and keyboard</li> <li>Package manager (opkg) for installing software</li> <li>Development tools (gcc, g++, make, git, gdb, etc.)</li> <li>Network connectivity via WiFi or Ethernet (USB adapters required)</li> <li>Access to thousands of open-source command-line applications</li> </ul>"},{"location":"getting-started/overview/#limitations","title":"Limitations","text":"<p>Be aware of these limitations:</p> <ul> <li>Console Only: No graphical desktop environment (text-based interface)</li> <li>Small Display: 320\u00d7320 pixels (53\u00d740 text), optimized for terminal use</li> <li>RAM: 128MB means careful resource management</li> <li>Storage: SD card speed affects performance</li> <li>No Built-in Network: Requires 3.3 volt USB WiFi or Ethernet adapter</li> <li>Battery Life: Running Linux uses more power than stock firmware</li> </ul>"},{"location":"getting-started/overview/#learning-path","title":"Learning Path","text":""},{"location":"getting-started/overview/#beginners","title":"Beginners","text":"<ol> <li>Start with Installation</li> <li>Follow First Boot guide</li> <li>Learn Quick Start Guide</li> <li>Explore Basic Usage</li> </ol>"},{"location":"getting-started/overview/#intermediate-users","title":"Intermediate Users","text":"<ol> <li>Review Hardware Requirements</li> <li>Perform Installation</li> <li>Configure Networking</li> <li>Install Applications</li> </ol>"},{"location":"getting-started/overview/#advanced-usersdevelopers","title":"Advanced Users/Developers","text":"<ol> <li>Check Installation for base system</li> <li>Review Developer Guide</li> <li>Set up Yocto Build System</li> <li>Start Contributing</li> </ol>"},{"location":"getting-started/overview/#documentation-structure","title":"Documentation Structure","text":"<p>This documentation is organized into sections:</p>"},{"location":"getting-started/overview/#getting-started-you-are-here","title":"Getting Started (You Are Here)","text":"<p>Everything needed to get Calculinux running</p>"},{"location":"getting-started/overview/#hardware","title":"Hardware","text":"<p>Physical device information, modifications, technical specs</p>"},{"location":"getting-started/overview/#user-guide","title":"User Guide","text":"<p>Day-to-day usage, applications, configuration</p>"},{"location":"getting-started/overview/#developer-guide","title":"Developer Guide","text":"<p>Building, customizing, contributing to Calculinux</p>"},{"location":"getting-started/overview/#troubleshooting","title":"Troubleshooting","text":"<p>Solutions to common problems and FAQ</p>"},{"location":"getting-started/overview/#resources","title":"Resources","text":"<p>External links, tools, community information</p>"},{"location":"getting-started/overview/#before-you-begin","title":"Before You Begin","text":""},{"location":"getting-started/overview/#important-warnings","title":"Important Warnings","text":"<p>Warranty</p> <p>Installing Luckfox Lyra requires opening your PicoCalc, possibly several times. You may want to secure your screen to the case with tape so it does not shift during assembly and break!</p> <p>Data Loss</p> <p>If you're replacing an existing PicoCalc Linux installation, back up any data first, or use a different SD card. The installation process will erase the SD card.</p> <p>SPI NAND</p> <p>If your Luckfox Lyra has SPI NAND flash, you must erase it first or the SD card will be ignored. See Boot Problems.</p>"},{"location":"getting-started/overview/#make-a-backup-plan","title":"Make a Backup Plan","text":"<p>If this is your first time:</p> <ul> <li>Keep the original Raspberry Pi Pico board in case you want to revert</li> <li>Use a spare SD card for testing</li> <li>Join the community forum before starting</li> <li>Read through all documentation first</li> </ul>"},{"location":"getting-started/overview/#next-steps","title":"Next Steps","text":"<p>Ready to proceed? Here's where to go next:</p> <ul> <li> <p> Hardware Requirements</p> <p>Verify you have compatible hardware</p> <p> Check Requirements</p> </li> <li> <p> Installation Guide</p> <p>Flash Calculinux to your SD card</p> <p> Install Now</p> </li> <li> <p> First Boot</p> <p>Power on and configure your system</p> <p> Boot Up</p> </li> <li> <p> Quick Start</p> <p>Learn the basics quickly</p> <p> Quick Start</p> </li> </ul>"},{"location":"getting-started/overview/#feedback","title":"Feedback","text":"<p>This documentation is continuously improving! If you find:</p> <ul> <li>Unclear instructions</li> <li>Missing information</li> <li>Errors or outdated content</li> <li>Suggestions for improvement</li> </ul> <p>Please open an issue or submit a pull request!</p> <p>Let's get started! Head to Hardware Requirements to begin.</p>"},{"location":"getting-started/quick-start/","title":"Quick Start Guide","text":"<p>Get up and running quickly with Calculinux basics.</p>"},{"location":"getting-started/quick-start/#essential-commands","title":"Essential Commands","text":""},{"location":"getting-started/quick-start/#system-information","title":"System Information","text":"<pre><code># System version\ncat /etc/os-release\n\n# Kernel version\nuname -a\n\n# Hardware info\ncat /proc/cpuinfo\ncat /proc/meminfo\n\n# Disk usage\ndf -h\n\n# Memory usage\nfree -h\n</code></pre>"},{"location":"getting-started/quick-start/#package-management","title":"Package Management","text":"<pre><code># Update package list\nopkg update\n\n# Search for package\nopkg find &lt;name&gt;\n\n# Install package\nopkg install &lt;package&gt;\n\n# Remove package\nopkg remove &lt;package&gt;\n\n# List installed\nopkg list-installed\n</code></pre>"},{"location":"getting-started/quick-start/#file-management","title":"File Management","text":"<pre><code># Navigate directories\ncd /path/to/directory\npwd  # Show current directory\nls -la  # List files\n\n# Create/remove\nmkdir dirname\nrm filename\nrm -r dirname\n\n# Copy/move\ncp source dest\nmv source dest\n\n# View files\ncat filename\nless filename\nnano filename  # Edit\n</code></pre>"},{"location":"getting-started/quick-start/#system-management","title":"System Management","text":"<pre><code># Reboot\nreboot\n\n# Shutdown\npoweroff\n\n# Check services\nsystemctl status\nsystemctl start &lt;service&gt;\nsystemctl stop &lt;service&gt;\n\n# View logs\njournalctl -f  # Follow logs\ndmesg  # Kernel messages\n</code></pre>"},{"location":"getting-started/quick-start/#common-tasks","title":"Common Tasks","text":""},{"location":"getting-started/quick-start/#connect-to-network","title":"Connect to Network","text":"<pre><code># Ethernet (DHCP)\nudhcpc -i eth0\n\n# Check connection\nping 8.8.8.8\n</code></pre>"},{"location":"getting-started/quick-start/#install-software","title":"Install Software","text":"<pre><code># Example: Install Python\nopkg update\nopkg install python3\n\n# Example: Install text editor\nopkg install vim\n</code></pre>"},{"location":"getting-started/quick-start/#manage-files","title":"Manage Files","text":"<pre><code># Create a file\necho \"Hello World\" &gt; test.txt\n\n# Edit a file\nnano test.txt\n\n# View a file\ncat test.txt\n</code></pre>"},{"location":"getting-started/quick-start/#monitor-system","title":"Monitor System","text":"<pre><code># Real-time process monitor\nhtop  # or top\n\n# Disk usage by directory\ndu -h /home | sort -h\n\n# Running processes\nps aux\n</code></pre>"},{"location":"getting-started/quick-start/#development","title":"Development","text":""},{"location":"getting-started/quick-start/#python-example","title":"Python Example","text":"<pre><code># Create Python script\nnano hello.py\n</code></pre> <pre><code>#!/usr/bin/env python3\nprint(\"Hello from Calculinux!\")\n</code></pre> <pre><code># Make executable\nchmod +x hello.py\n\n# Run\n./hello.py\n</code></pre>"},{"location":"getting-started/quick-start/#c-example","title":"C Example","text":"<pre><code># Create C program\nnano hello.c\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    printf(\"Hello from Calculinux!\\n\");\n    return 0;\n}\n</code></pre> <pre><code># Compile\ngcc hello.c -o hello\n\n# Run\n./hello\n</code></pre>"},{"location":"getting-started/quick-start/#tips-tricks","title":"Tips &amp; Tricks","text":""},{"location":"getting-started/quick-start/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<ul> <li>Ctrl+C: Stop current command</li> <li>Ctrl+Z: Suspend current command</li> <li>Ctrl+D: Exit/logout</li> <li>Tab: Auto-complete</li> </ul>"},{"location":"getting-started/quick-start/#command-history","title":"Command History","text":"<pre><code># View history\nhistory\n\n# Search history\nCtrl+R  # Then type search term\n\n# Rerun last command\n!!\n\n# Rerun command from history\n!123  # Run command #123\n</code></pre>"},{"location":"getting-started/quick-start/#useful-aliases","title":"Useful Aliases","text":"<p>Add to <code>~/.bashrc</code>:</p> <pre><code>alias ll='ls -la'\nalias update='opkg update'\nalias install='opkg install'\n</code></pre>"},{"location":"getting-started/quick-start/#learning-more","title":"Learning More","text":""},{"location":"getting-started/quick-start/#built-in-help","title":"Built-in Help","text":"<pre><code># Command manual\nman &lt;command&gt;\n\n# Command help\n&lt;command&gt; --help\n\n# Installed documentation\nls /usr/share/doc\n</code></pre>"},{"location":"getting-started/quick-start/#further-reading","title":"Further Reading","text":"<ul> <li>User Guide</li> <li>Package Management</li> <li>System Configuration</li> <li>Applications</li> </ul>"},{"location":"getting-started/quick-start/#getting-help","title":"Getting Help","text":"<ul> <li>Check Troubleshooting</li> <li>Visit Community</li> <li>Read External Docs</li> </ul>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<p>Now that you know the basics:</p> <ul> <li>Explore Basic Usage for detailed guides</li> <li>Install your favorite Applications</li> <li>Try Development if interested in coding</li> <li>Join the Community!</li> </ul>"},{"location":"hardware/compatibility/","title":"Hardware Compatibility Matrix","text":"<p>This page provides a comprehensive compatibility matrix for different hardware combinations with Calculinux.</p>"},{"location":"hardware/compatibility/#sbc-compatibility","title":"SBC Compatibility","text":"SBC Model Status RAM Options Notes Luckfox Lyra \u2705 Fully Supported 64/128/256 MB Primary platform Luckfox Lyra (SPI NAND) \u2705 Supported 128/256 MB Requires NAND erase Milk-V Duo \ud83d\udea7 Planned 64 MB Future support Milk-V Duo256 \ud83d\udea7 Planned 256 MB Future support Raspberry Pi Zero \u274c Not Compatible N/A Form factor mismatch Custom Boards \u2753 Unknown Varies Community experiments <p>Legend: - \u2705 Fully Supported - Works out of box with official images - \ud83d\udea7 Planned - Under development or planned for future - \u2753 Unknown - Not tested, may work with modifications - \u274c Not Compatible - Known not to work</p>"},{"location":"hardware/compatibility/#luckfox-lyra-variants","title":"Luckfox Lyra Variants","text":""},{"location":"hardware/compatibility/#supported-variants","title":"Supported Variants","text":"<p>Calculinux currently supports two variants of the Luckfox Lyra board:</p> RAM Storage Status Notes 128 MB SD Card Only \u2705 Recommended Simplest setup 128 MB SPI NAND + SD \u2705 Supported Requires NAND erase first"},{"location":"hardware/compatibility/#future-variants-not-yet-supported","title":"Future Variants (Not Yet Supported)","text":"Variant Notes Status Luckfox Lyra Zero W Built-in WiFi/Bluetooth \ud83d\udea7 Potential future support Luckfox Lyra Pi Core3506-based \ud83d\udea7 Potential future support Luckfox Lyra Plus RK3576-based \ud83d\udea7 Potential future support 64MB variants Lower memory \ud83d\udea7 May work but untested 256MB variants Higher memory \ud83d\udea7 May work but untested"},{"location":"hardware/compatibility/#by-memory-configuration","title":"By Memory Configuration","text":"RAM Recommended Use Status 64 MB Console/Terminal \u2753 Untested - may work 128 MB General Use \u2705 Recommended for most applications 256 MB Development \u2753 Untested - may work"},{"location":"hardware/compatibility/#by-storage-type","title":"By Storage Type","text":"Storage Boot Priority Calculinux Support SD Card Only Primary \u2705 Recommended - simplest setup SPI NAND + SD NAND first \u2705 Supported after NAND erase eMMC N/A \u274c Not available on Lyra"},{"location":"hardware/compatibility/#by-network-capability","title":"By Network Capability","text":"<p>Limited Network Options</p> <p>The basic Luckfox Lyra has no built-in networking. An Ethernet variant exists but would require a custom 3D-printed backplate to access the port and has not been tested with Calculinux.</p> Connectivity Hardware Required Status Notes Ethernet (Lyra variant) Custom backplate \ud83d\udea7 Untested Ethernet model exists but not tested WiFi Not currently available \u274c Not Supported No practical solution at present"},{"location":"hardware/compatibility/#storage-compatibility","title":"Storage Compatibility","text":""},{"location":"hardware/compatibility/#microsd-cards","title":"MicroSD Cards","text":"Brand/Type Speed Class Size Status Notes SanDisk Ultra Class 10 8-32 GB \u2705 Recommended Good reliability Samsung EVO Class 10 8-32 GB \u2705 Recommended Good value Generic/No-Name Varies Any \u26a0\ufe0f Use Caution May be unreliable <p>Recommendations: - Minimum: 8 GB Class 10 - Recommended: 16-32 GB from reputable brand</p> <p>SD Card Performance</p> <p>Given the hardware speeds, different SD card classes are unlikely to have significant impact on performance.</p>"},{"location":"hardware/compatibility/#usb-storage","title":"USB Storage","text":"Type Status Notes Internal Storage \u2705 Fully Supported SD card and optional SPI NAND External USB (OTG) \ud83e\uddea Experimental Via USB-C port with 3.3V devices or powered hub <p>USB-C OTG Support</p> <p>The USB-C port supports USB On-The-Go functionality, enabling connection of external USB devices. However, this requires 3.3V compatible devices or an externally powered USB hub. This feature is currently untested and may require additional configuration.</p>"},{"location":"hardware/compatibility/#display-compatibility","title":"Display Compatibility","text":""},{"location":"hardware/compatibility/#integrated-display","title":"Integrated Display","text":"PicoCalc Model Display Type Status PicoCalc (Original) ST7789 LCD \u2705 Fully Supported PicoCalc (Variant) Similar LCD \u2705 Should work"},{"location":"hardware/compatibility/#replacement-display-options","title":"Replacement Display Options","text":"Display Type Connector Size Requirement Status MIPI DSI (Higher Resolution) 22-pin (CM4 compatible) 3.95\" diagonal, square \ud83d\udea7 Possible Original ST7789 SPI 320\u00d7320 \u2705 Standard <p>MIPI DSI Display Upgrade</p> <p>Higher resolution MIPI DSI displays are possible if they use the same 22-pin connector found on Raspberry Pi Compute Module IO boards. The display must be square format and exactly 3.95\" diagonal to fit within the PicoCalc enclosure. This would require hardware modification and custom driver configuration.</p>"},{"location":"hardware/compatibility/#external-displays","title":"External Displays","text":"Connection Type Status Notes HDMI \u274c Not Available RV1106 has no HDMI USB Display \ud83e\uddea Experimental May work with DisplayLink via USB-C OTG SPI Display \u26a0\ufe0f Conflicts Would conflict with internal display"},{"location":"hardware/compatibility/#input-device-compatibility","title":"Input Device Compatibility","text":""},{"location":"hardware/compatibility/#integrated-keyboard","title":"Integrated Keyboard","text":"PicoCalc Model Keyboard Status All Models Matrix Keyboard \u2705 Fully Supported"},{"location":"hardware/compatibility/#external-input","title":"External Input","text":"Device Type Connection Status Notes USB Input Devices USB-C OTG \ud83e\uddea Experimental Requires 3.3V devices or powered hub Keyboard/Mouse USB-C OTG \ud83e\uddea Experimental May work with compatible devices <p>USB OTG Input Support</p> <p>While the integrated matrix keyboard is the primary input method, external USB input devices may be possible via the USB-C OTG port. This requires 3.3V compatible devices or an externally powered USB hub and is currently untested.</p>"},{"location":"hardware/compatibility/#network-hardware","title":"Network Hardware","text":""},{"location":"hardware/compatibility/#built-in-network","title":"Built-in Network","text":"Model Interface Speed Status Lyra Ethernet 10/100 100 Mbps \ud83d\udea7 Untested - Requires custom backplate Lyra Basic None N/A \u274c No networking capability <p>Ethernet Model Considerations</p> <p>While a Luckfox Lyra variant with built-in Ethernet exists, it has not been tested with Calculinux and would require a custom 3D-printed backplate to access the Ethernet port within the PicoCalc enclosure.</p>"},{"location":"hardware/compatibility/#power-supply-compatibility","title":"Power Supply Compatibility","text":""},{"location":"hardware/compatibility/#internal-battery-power","title":"Internal Battery Power","text":"Power Source Status Notes PicoCalc Internal Battery \u2705 Fully Supported Rechargeable lithium-ion USB-C Charging/OTG \u2705 Supported Charging + OTG data (3.3V devices) <p>USB-C Dual Function</p> <p>The USB-C port serves dual purposes: charging the internal battery and USB OTG functionality for external devices. External devices must be 3.3V compatible or use an externally powered hub.</p>"},{"location":"hardware/compatibility/#peripheral-compatibility","title":"Peripheral Compatibility","text":""},{"location":"hardware/compatibility/#internal-peripherals","title":"Internal Peripherals","text":"Device Type Status Notes Display \u2705 Fully Supported Integrated LCD Keyboard \u2705 Fully Supported Matrix keyboard Storage \u2705 Fully Supported SD card, optional NAND"},{"location":"hardware/compatibility/#expansion-interfaces","title":"Expansion Interfaces","text":"<p>Internal Expansion Options</p> <p>While the Luckfox Lyra is enclosed within the PicoCalc, it provides several expansion interfaces accessible for hardware modifications and custom projects. For detailed pinout information, see the official Luckfox Lyra pinout documentation.</p> Interface Voltage Status Notes GPIO 3.3V \u2705 Available Multiple GPIO pins accessible USB 3.3V \u2705 Available Internal USB host/device I2C 3.3V \u2705 Available I2C bus for sensors/peripherals SPI 3.3V \u2705 Available SPI interface (shared with display) UART 3.3V \u2705 Available Serial communication <p>Advanced Users Only</p> <p>Accessing these interfaces requires hardware modification skills and may void warranties. All interfaces operate at 3.3V logic levels.</p>"},{"location":"hardware/compatibility/#expansion-peripheral-compatibility","title":"Expansion Peripheral Compatibility","text":"Peripheral Type Interface Status Notes Sensors I2C/SPI \u2705 Compatible Temperature, accelerometer, etc. External Storage USB 3.3V \u2705 Compatible Flash drives, custom storage Network Modules USB/SPI \ud83d\udea7 Possible WiFi/cellular modules (3.3V) Audio Devices I2C/SPI \ud83d\udea7 Possible External audio codecs Replacement Displays MIPI DSI \ud83d\udea7 Possible 22-pin connector, 3.95\" square Additional SPI Displays SPI \u26a0\ufe0f Conflicts Would conflict with main display Input Devices GPIO/I2C \ud83d\udea7 Possible Additional buttons, encoders Communication UART/USB \u2705 Compatible Serial devices, modems <p>Custom Hardware Projects</p> <p>These expansion options enable custom hardware projects and modifications for advanced users comfortable with electronics work.</p>"},{"location":"hardware/compatibility/#gpio-peripherals","title":"GPIO Peripherals","text":"<p>GPIO Access Limited</p> <p>Most GPIO pins are used by display and keyboard. External GPIO expansion is limited.</p>"},{"location":"hardware/compatibility/#software-compatibility","title":"Software Compatibility","text":"<p>Console-Only System</p> <p>Calculinux is currently a console-only system with no graphical desktop environment. All interaction is via text terminal. This is by design to maximize performance on limited hardware.</p>"},{"location":"hardware/compatibility/#user-interface","title":"User Interface","text":"Interface Type RAM Requirement Status Notes Console (Text) ~32 MB \u2705 Fully Supported Current implementation Framebuffer Graphics Variable \ud83d\udea7 Future Planned for future releases X11/Wayland Desktop &gt;128 MB \ud83d\udea7 Future Not currently available"},{"location":"hardware/compatibility/#console-applications","title":"Console Applications","text":"Application Type 64 MB RAM 128 MB RAM 256 MB RAM Terminal Apps \u2705 \u2705 \u2705 Text Editor (vim/nano) \u2705 \u2705 \u2705 Scripting (Python/Bash) \u26a0\ufe0f Basic \u2705 \u2705 Development Tools \u26a0\ufe0f Basic \u2705 \u2705 Command-line Tools \u2705 \u2705 \u2705"},{"location":"hardware/compatibility/#gaming-and-entertainment-community-tested","title":"Gaming and Entertainment (Community Tested)","text":"<p>Community Testing Results</p> <p>These applications have been tested by community members but may not be included in official Calculinux images.</p> Application Status Notes Pico-8 \u2705 Working Runs smoothly, audio requires hardware mod Doom (prboom) \u2705 Working Good performance, tested extensively RetroArch \u26a0\ufe0f Issues Has configuration problems tmux \u2705 Working Terminal multiplexer works well Framebuffer apps \u2705 Working FBV image viewer confirmed working <p>Gaming Performance</p> <p>Gaming applications work but are limited by SPI display bandwidth. Not all emulators perform well due to hardware constraints.</p>"},{"location":"hardware/compatibility/#testing-status","title":"Testing Status","text":""},{"location":"hardware/compatibility/#tested-configurations","title":"Tested Configurations","text":"Configuration Test Date Status Lyra 128MB + 64GB SD Mar 2025 \u2705 Working"},{"location":"hardware/compatibility/#known-issues","title":"Known Issues","text":"Issue Affected Hardware Status Workaround SPI NAND Boot Lyra with NAND \u2705 Documented Erase NAND first Slow SD Cards External SD card \u26a0\ufe0f Known Use internal storage for demanding tasks"},{"location":"hardware/compatibility/#community-testing","title":"Community Testing","text":"<p>We need community help testing various hardware combinations!</p>"},{"location":"hardware/compatibility/#untested-configurations","title":"Untested Configurations","text":"<p>Help us test these combinations:</p> <ul> <li>[ ] Different SD card brands (though performance differences are likely minimal)</li> <li>[ ] Various applications (request inclusion!)</li> <li>[ ] Luckfox Lyra Ethernet model with custom backplate</li> </ul>"},{"location":"hardware/compatibility/#how-to-report","title":"How to Report","text":"<p>If you test a configuration:</p> <ol> <li>Open an issue on GitHub</li> <li>Include:</li> <li>Hardware model and version</li> <li>SD card brand and size</li> <li>Any peripherals connected</li> <li>What works / doesn't work</li> <li>Use the \"Hardware Compatibility Report\" template</li> </ol>"},{"location":"hardware/compatibility/#recommended-configurations","title":"Recommended Configurations","text":""},{"location":"hardware/compatibility/#budget-build","title":"Budget Build","text":"<ul> <li>SBC: Luckfox Lyra 128MB (basic)</li> <li>Storage: SanDisk Ultra 16GB</li> <li>Use Case: Console, development, learning</li> <li>Cost: ~$30-40</li> </ul>"},{"location":"hardware/compatibility/#standard-build","title":"Standard Build","text":"<ul> <li>SBC: Luckfox Lyra 128MB </li> <li>Storage: Samsung EVO 32GB</li> <li>Use Case: General use, projects</li> <li>Cost: ~$35-45</li> </ul>"},{"location":"hardware/compatibility/#ethernet-build-experimental","title":"Ethernet Build (Experimental)","text":"<ul> <li>SBC: Luckfox Lyra 128MB (ethernet variant)</li> <li>Storage: Samsung EVO 32GB</li> <li>Extras: Custom 3D-printed backplate for Ethernet access</li> <li>Use Case: Network-connected projects (untested)</li> <li>Cost: ~$40-50 + custom backplate</li> </ul>"},{"location":"hardware/compatibility/#future-hardware-support","title":"Future Hardware Support","text":""},{"location":"hardware/compatibility/#planned","title":"Planned","text":"<ul> <li>Milk-V Duo: Similar form factor, RISC-V processor</li> <li>Custom Carrier Boards: Community-designed alternatives</li> </ul>"},{"location":"hardware/compatibility/#under-consideration","title":"Under Consideration","text":"<ul> <li>Pine64 Ox64: RISC-V option</li> <li>ESP32-based boards: Lower cost alternative</li> <li>Raspberry Pi alternatives: If form factor matches</li> </ul>"},{"location":"hardware/compatibility/#next-steps","title":"Next Steps","text":"<ul> <li>Review Hardware Requirements</li> <li>Check Luckfox Lyra details</li> <li>See Hardware Modifications guide</li> </ul>"},{"location":"hardware/display-input/","title":"Display &amp; Input Technical Details","text":"<p>This page provides technical information about the PicoCalc display and keyboard interfacing with Calculinux.</p>"},{"location":"hardware/display-input/#display-system","title":"Display System","text":""},{"location":"hardware/display-input/#lcd-panel-specifications","title":"LCD Panel Specifications","text":"Specification Details Interface SPI (Serial Peripheral Interface) Controller ILI9488 (or similar) Resolution 320\u00d7320 pixels Text Mode 53 columns \u00d7 40 rows (6\u00d78 font) Color Depth 16-bit RGB565 Refresh Rate ~60Hz <p>Panel Variations</p> <p>The PicoCalc uses a 320\u00d7320 pixel display with an ILI9488 controller. The small text area (53\u00d740 characters) means that many applications will wrap text lines, but this is usually manageable with proper terminal configuration.</p>"},{"location":"hardware/display-input/#spi-configuration","title":"SPI Configuration","text":"<p>The display connects via SPI with the following characteristics:</p> <pre><code>SPI Bus: spi0\nMode: 0 (CPOL=0, CPHA=0)\nBits per word: 8\nMax Speed: 80 MHz (overclocked for better performance)\nStandard Speed: 40 MHz\n</code></pre> <p>SPI Overclocking</p> <p>Community testing shows the display SPI can be safely overclocked to 80MHz for improved performance, though this may be limited by SPI bandwidth for full framerate applications.</p>"},{"location":"hardware/display-input/#framerate-limitations","title":"Framerate Limitations","text":"Usage Type Expected Performance Text/Console Full speed Graphics Applications &lt;60fps due to SPI bandwidth Gaming Varies by complexity"},{"location":"hardware/display-input/#text-display-considerations","title":"Text Display Considerations","text":"<p>The 320\u00d7320 pixel display with 6\u00d78 font provides a text area of 53 columns \u00d7 40 rows. This is smaller than most software expects:</p> <ul> <li>Standard terminal: 80\u00d724 or larger</li> <li>Many applications assume at least 80 columns</li> <li>Text lines will often wrap, requiring horizontal scrolling</li> <li>Some TUI applications may have layout issues</li> </ul> <p>Workarounds: - Use applications designed for small terminals - Configure <code>COLUMNS=53</code> and <code>LINES=40</code> environment variables - Use terminal pagers with line wrapping (<code>less -S</code> for side-scrolling) - Choose compact display options when available in applications</p>"},{"location":"hardware/display-input/#backlight-control","title":"Backlight Control","text":"<p>The backlight is controlled by the STM32 MCU, not directly by the Linux system:</p> <p>Current Implementation: Limited display sleep functionality Interface: Via MFD drivers (experimental) MCU Control: Brightness managed by keyboard MCU firmware</p> <p>Backlight Limitations</p> <p>Current display sleep functionality does not yet control the backlight directly. Full backlight control is intended to be implemented through the experimental MFD drivers that communicate with the keyboard MCU.</p> <p>Display Sleep (without backlight control): <pre><code># Turn off display (framebuffer only)\necho 0 &gt; /sys/class/backlight/picocalc/bl_power\n\n# Turn on display\necho 1 &gt; /sys/class/backlight/picocalc/bl_power\n</code></pre></p>"},{"location":"hardware/display-input/#display-driver","title":"Display Driver","text":"<p>Calculinux uses a custom ILI9488 framebuffer driver:</p> <p>Driver Name: <code>ili9488</code> Compatible: <code>ilitek,ili9488</code></p> <p>Features: - Direct framebuffer access (<code>/dev/fb0</code>) - 320\u00d7320 pixel resolution - 30 FPS target frame rate - SPI interface at up to 80MHz - Hardware-specific optimizations</p> <p>Driver Location: Available in the picocalc-drivers repository</p>"},{"location":"hardware/display-input/#device-tree-configuration","title":"Device Tree Configuration","text":"<p>Actual device tree configuration from <code>rk3506-luckfox-lyra.dtsi</code>:</p> <pre><code>&amp;spi0 {\n    status = \"okay\";\n    pinctrl-names = \"default\";\n    pinctrl-0 = &lt;&amp;rm_io7_spi0_clk &amp;rm_io6_spi0_mosi &amp;rm_io5_spi0_miso&gt;;\n\n    ili9488: ili9488@0 {\n        status = \"okay\";\n        compatible = \"ilitek,ili9488\";\n        spi-max-frequency = &lt;80000000&gt;;\n        reg = &lt;0&gt;;\n        pinctrl-names = \"default\";\n        pinctrl-0 = &lt;&amp;ili9488_pins&gt;;\n        fps = &lt;30&gt;;\n        width = &lt;320&gt;;\n        height = &lt;320&gt;;\n        cs = &lt;&amp;gpio0 RK_PA4 GPIO_ACTIVE_HIGH&gt;;\n        dc = &lt;&amp;gpio0 RK_PA3 GPIO_ACTIVE_HIGH&gt;;\n        rst = &lt;&amp;gpio0 RK_PA2 GPIO_ACTIVE_HIGH&gt;;\n    };\n};\n</code></pre> <p>GPIO Pin Configuration: <pre><code>ili9488 {\n    ili9488_pins: ili9488-pins {\n        rockchip,pins =\n            &lt;0 RK_PA4 RK_FUNC_GPIO &amp;pcfg_pull_none&gt;,  /* CS */\n            &lt;0 RK_PA3 RK_FUNC_GPIO &amp;pcfg_pull_none&gt;,  /* DC */\n            &lt;0 RK_PA2 RK_FUNC_GPIO &amp;pcfg_pull_none&gt;;  /* RST */\n    };\n};\n</code></pre></p>"},{"location":"hardware/display-input/#performance-considerations","title":"Performance Considerations","text":"<p>Bandwidth Calculation: <pre><code>320 \u00d7 320 pixels \u00d7 2 bytes \u00d7 60 fps = 12.3 MB/s\nAt 80 MHz SPI: ~10 MB/s theoretical maximum\n</code></pre></p> <p>The driver implements: - Frame skipping if needed - Partial updates for efficiency - Double buffering to reduce tearing</p>"},{"location":"hardware/display-input/#backlight-control_1","title":"Backlight Control","text":"<p>The backlight is controlled via PWM:</p> <p>Interface: <code>/sys/class/backlight/picocalc/</code></p> <p>Control: <pre><code># Set brightness (0-255)\necho 200 &gt; /sys/class/backlight/picocalc/brightness\n\n# Get current brightness\ncat /sys/class/backlight/picocalc/brightness\n\n# Get maximum brightness\ncat /sys/class/backlight/picocalc/max_brightness\n</code></pre></p>"},{"location":"hardware/display-input/#keyboard-system","title":"Keyboard System","text":""},{"location":"hardware/display-input/#keyboard-architecture","title":"Keyboard Architecture","text":"<p>The PicoCalc keyboard uses a sophisticated architecture with a dedicated microcontroller:</p> <p>MCU: STM32F103R8T6 \"southbridge\" chip running Arduino code Interface: I2C communication to the Luckfox Lyra Matrix: Physical matrix keyboard handled internally by the MCU</p> <p>MCU Southbridge Design</p> <p>The keyboard MCU handles matrix scanning internally and presents a clean I2C interface to the main SBC. This design offloads keyboard processing and enables additional functionality like power management and brightness control.</p>"},{"location":"hardware/display-input/#mcu-functions","title":"MCU Functions","text":"<p>The STM32F103R8T6 microcontroller provides multiple functions:</p> Function Status Notes Keyboard Matrix Scanning \u2705 Active Internal matrix handling I2C Communication \u2705 Active Interface to Luckfox Lyra Battery Monitoring \ud83e\uddea Experimental Via MFD drivers Brightness Control \ud83e\uddea Experimental Screen and keyboard backlight Power Button Support \ud83e\uddea Experimental System shutdown control RTC (Alternate Firmware) \ud83d\udea7 Future Custom firmware feature"},{"location":"hardware/display-input/#firmware-options","title":"Firmware Options","text":""},{"location":"hardware/display-input/#default-firmware","title":"Default Firmware","text":"<p>Source: clockworkpi/PicoCalc Platform: Arduino code for STM32F103R8T6 Features: Basic keyboard and I2C communication</p>"},{"location":"hardware/display-input/#custom-bios-firmware","title":"Custom BIOS Firmware","text":"<p>Source: Custom PicoCalc BIOS Forum Discussion: Custom PicoCalc BIOS Thread Additional Features: - Real-Time Clock (RTC) support - Enhanced power management - Extended I2C functionality</p> <p>Firmware Development</p> <p>The keyboard MCU firmware is user-upgradeable, enabling community development of enhanced features and functionality.</p>"},{"location":"hardware/display-input/#i2c-communication","title":"I2C Communication","text":"<p>I2C Address: (Device-specific, check firmware documentation) Bus Speed: Standard mode (100 kHz) or Fast mode (400 kHz) Protocol: Custom protocol defined by firmware</p>"},{"location":"hardware/display-input/#linux-driver-integration","title":"Linux Driver Integration","text":""},{"location":"hardware/display-input/#mfd-multi-function-device-drivers","title":"MFD (Multi-Function Device) Drivers","text":"<p>Status: \ud83e\uddea Experimental - under development Purpose: Unified driver for all MCU functions</p> <p>Driver Components: - Keyboard input device - Battery monitoring - Brightness control - Power management - RTC support (custom firmware)</p> <p>Driver Development Status</p> <p>The MFD drivers are experimental and not yet complete. They show promise but may not be fully functional in current releases.</p>"},{"location":"hardware/display-input/#keyboard-driver","title":"Keyboard Driver","text":"<p>Driver Type: MFD (Multi-Function Device) with I2C communication Driver Name: <code>picocalc_mfd</code> (experimental)</p> <p>Features: - I2C communication with STM32 MCU - Standard Linux input device interface - Integration with MCU power management - Battery monitoring support - Brightness control interface</p> <p>Driver Location: <code>drivers/mfd/picocalc_mfd.c</code> (experimental)</p> <p>Legacy vs MFD Drivers</p> <p>Current stable releases may use simpler keyboard-only drivers, while experimental MFD drivers provide full MCU integration. Check your kernel configuration for which driver is active.</p>"},{"location":"hardware/display-input/#device-tree-configuration_1","title":"Device Tree Configuration","text":"<p>Actual device tree configuration for I2C keyboard MCU from <code>rk3506-luckfox-lyra.dtsi</code>:</p> <pre><code>&amp;i2c2 {\n    status = \"okay\";\n    pinctrl-names = \"default\";\n    pinctrl-0 = &lt;&amp;rm_io10_i2c2_scl &amp;rm_io11_i2c2_sda&gt;;\n    max-frequency = &lt;400000&gt;;\n\n    picocalc_kbd: picocalc_kbd@1f {\n        status = \"okay\";\n        compatible = \"picocalc_kbd\";\n        reg = &lt;0x1F&gt;;\n    };\n};\n</code></pre> <p>I2C Pin Configuration: <pre><code>&amp;pinctrl {\n    rm_io11 {\n        rm_io11_i2c2_sda: rm-io11-i2c2-sda {\n            rockchip,pins = &lt;0 RK_PB3 35 &amp;pcfg_pull_none&gt;;\n        };\n    };\n\n    rm_io10 {\n        rm_io10_i2c2_scl: rm-io10-i2c2-scl {\n            rockchip,pins = &lt;0 RK_PB2 34 &amp;pcfg_pull_none&gt;;\n        };\n    };\n};\n</code></pre></p> <p>I2C Configuration</p> <p>The keyboard MCU is connected to I2C bus 2 at address 0x1F, running at 400kHz (fast mode).</p>"},{"location":"hardware/display-input/#input-device-interface","title":"Input Device Interface","text":"<p>The keyboard appears as a standard Linux input device:</p> <p>Device Path: <code>/dev/input/event0</code></p> <p>Testing Input: <pre><code># List input devices\ncat /proc/bus/input/devices\n\n# Monitor keyboard events\nevtest /dev/input/event0\n</code></pre></p>"},{"location":"hardware/display-input/#custom-key-bindings","title":"Custom Key Bindings","text":"<p>Users can remap keys using standard Linux tools:</p> <p>Using udev/hwdb: <pre><code># /etc/udev/hwdb.d/90-picocalc-keyboard.hwdb\nevdev:input:b0003v*p*\n KEYBOARD_KEY_1e=leftshift\n</code></pre></p>"},{"location":"hardware/display-input/#display-output","title":"Display Output","text":""},{"location":"hardware/display-input/#console-text-mode","title":"Console (Text Mode)","text":"<p>Console Driver: <code>fbcon</code> (framebuffer console) Default Font: 6\u00d78 pixels Text Area: 53 columns \u00d7 40 rows (at 320\u00d7320 with 6\u00d78 font)</p> <p>Configuration: <pre><code># /etc/default/console-setup\nACTIVE_CONSOLES=\"/dev/tty[1-6]\"\nFONTFACE=\"Terminus\"\nFONTSIZE=\"6x8\"\n</code></pre></p> <p>Font Rendering: - Character size: 6\u00d78 pixels - Text area: 53\u00d740 characters - VGA text mode emulation - UTF-8 support</p>"},{"location":"hardware/display-input/#graphical-display","title":"Graphical Display","text":"<p>The display is graphics-capable but no graphical environment is installed by default:</p> <p>Current State: Console-only by default Experimentation Encouraged: Community testing of graphical environments</p> <p>Potential Display Servers: - X11: Would require <code>xf86-video-fbdev</code> driver installation - Wayland: Would require compositor with fbdev backend - Direct Rendering: Via <code>/dev/fb0</code> for custom applications</p> <p>Graphics Capability</p> <p>While Calculinux ships as console-only, the hardware supports graphics applications. Community experimentation with X11, Wayland, or direct framebuffer graphics is encouraged.</p>"},{"location":"hardware/display-input/#power-management","title":"Power Management","text":""},{"location":"hardware/display-input/#display-sleep","title":"Display Sleep","text":"<p>The display can be put to sleep to save power:</p> <pre><code># Turn off display\necho 0 &gt; /sys/class/backlight/picocalc/bl_power\n\n# Turn on display\necho 1 &gt; /sys/class/backlight/picocalc/bl_power\n</code></pre>"},{"location":"hardware/display-input/#automatic-dimming","title":"Automatic Dimming","text":"<p>Configure automatic dimming:</p> <pre><code># Using systemd-logind\n# /etc/systemd/logind.conf\nIdleAction=ignore\nIdleActionSec=5min\n</code></pre>"},{"location":"hardware/display-input/#troubleshooting","title":"Troubleshooting","text":""},{"location":"hardware/display-input/#display-issues","title":"Display Issues","text":"<p>Symptom: No display output</p> <p>Check: <pre><code># Verify framebuffer device exists\nls -l /dev/fb0\n\n# Check ILI9488 driver loaded\nlsmod | grep ili9488\n\n# View kernel logs\ndmesg | grep -i ili9488\n</code></pre></p> <p>Symptom: Display corruption or tearing</p> <p>Solutions: - Check display cable is fully inserted - Reduce SPI clock speed in device tree - Enable double buffering - Verify power supply stability</p>"},{"location":"hardware/display-input/#keyboard-issues","title":"Keyboard Issues","text":"<p>Symptom: Keys not responding</p> <p>Check via Serial Console: 1. Connect to PicoCalc USB-C port at 1500000 baud 2. Log in to the system 3. Check which keyboard driver is loaded:</p> <pre><code># Check for picocalc_kbd driver\nlsmod | grep picocalc_kbd\n\n# Check for MFD keyboard driver  \nlsmod | grep picocalc_mfd_kbd\n\n# Try loading the alternative driver if needed\nmodprobe picocalc_mfd_kbd\n# or\nmodprobe picocalc_kbd\n</code></pre> <p>Additional Checks: <pre><code># Verify input device exists\nls -l /dev/input/event*\n\n# Check I2C communication\ni2cdetect -y 2  # MCU is on I2C bus 2\n\n# Test raw input\nevtest /dev/input/event0\n</code></pre></p> <p>If Problems Persist: File a bug report with: - Which drivers you tested - Serial console output - Kernel log messages (<code>dmesg | grep -i picocalc</code>)</p> <p>Symptom: Intermittent key responses</p> <p>Check: <pre><code># Check I2C bus errors\ndmesg | grep -i i2c\n\n# Monitor MCU communication\n# (requires debug firmware or driver)\n</code></pre></p> <p>Symptom: Key repeat too fast/slow</p> <p>Adjust: <pre><code># Set repeat rate (delay, rate)\nkbdrate -d 250 -r 30\n</code></pre></p>"},{"location":"hardware/display-input/#development-debugging","title":"Development &amp; Debugging","text":""},{"location":"hardware/display-input/#graphics-programming","title":"Graphics Programming","text":"<p>For graphics applications, we recommend using SDL rather than direct framebuffer access:</p> <p>SDL (Simple DirectMedia Layer): - Cross-platform graphics library - Handles framebuffer abstraction - Better compatibility and portability - Hardware acceleration where available</p> <p>SDL Documentation: SDL2 Documentation</p> <p>Basic SDL Setup: <pre><code>#include &lt;SDL2/SDL.h&gt;\n\nint main() {\n    SDL_Init(SDL_INIT_VIDEO);\n    SDL_Window* window = SDL_CreateWindow(\"PicoCalc App\", \n        SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, \n        320, 320, SDL_WINDOW_SHOWN);\n    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, 0);\n\n    // Your graphics code here\n\n    SDL_DestroyRenderer(renderer);\n    SDL_DestroyWindow(window);\n    SDL_Quit();\n    return 0;\n}\n</code></pre></p>"},{"location":"hardware/display-input/#reading-keyboard-events","title":"Reading Keyboard Events","text":"<p>Example Python code:</p> <pre><code>from evdev import InputDevice, categorize, ecodes\n\ndev = InputDevice('/dev/input/event0')\n\nfor event in dev.read_loop():\n    if event.type == ecodes.EV_KEY:\n        print(categorize(event))\n</code></pre>"},{"location":"hardware/display-input/#driver-source-code","title":"Driver Source Code","text":"<p>The complete driver source code is available in the Calculinux picocalc-drivers repository:</p> <ul> <li>Display Driver (ILI9488): picocalc-drivers repository</li> <li>MFD Keyboard Driver: picocalc-drivers repository</li> <li>Hisptoot Keyboard Driver: picocalc-drivers repository</li> <li>Device Tree: meta-calculinux repository</li> </ul>"},{"location":"hardware/display-input/#mcu-firmware-source-code","title":"MCU Firmware Source Code","text":"<ul> <li>Default Firmware: clockworkpi/PicoCalc</li> <li>Custom BIOS: jackcartersmith/picocalc_BIOS</li> </ul> <p>Driver Repository</p> <p>Hardware-specific drivers are maintained in the picocalc-drivers repository, while the meta-calculinux repository contains the build system and device tree configurations.</p>"},{"location":"hardware/display-input/#contributing","title":"Contributing","text":"<p>Improvements to the display and keyboard drivers are welcome! See Contributing for guidelines.</p>"},{"location":"hardware/display-input/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about Power Management</li> <li>Review Hardware Modifications</li> <li>Explore Kernel Development</li> </ul>"},{"location":"hardware/luckfox-lyra/","title":"Luckfox Lyra","text":"<p>The Luckfox Lyra is a compact single-board computer based on the Rockchip RK3506G2 SoC, making it an ideal replacement for the PicoCalc's stock module.</p>"},{"location":"hardware/luckfox-lyra/#overview","title":"Overview","text":"<p>The Luckfox Lyra provides significant computing power in a small form factor, making it perfect for pocket-sized Linux applications.</p>"},{"location":"hardware/luckfox-lyra/#specifications","title":"Specifications","text":""},{"location":"hardware/luckfox-lyra/#processor","title":"Processor","text":"Component Specification SoC Rockchip RK3506G2 CPU Triple-core ARM Cortex-A7 @ 1.2GHz + ARM Cortex-M0 Architecture ARMv7-A (32-bit) NPU 0.5 TOPS AI accelerator"},{"location":"hardware/luckfox-lyra/#memory-storage","title":"Memory &amp; Storage","text":"Component Options RAM 64MB / 128MB / 256MB DDR2/DDR3 Flash Storage Optional SPI NAND (different versions available) External Storage MicroSD card slot <p>SPI NAND Versions</p> <p>Some Luckfox Lyra boards come with SPI NAND flash memory. If your board has SPI NAND, you must erase it first or the board will boot from NAND instead of the SD card. See the troubleshooting guide for instructions.</p>"},{"location":"hardware/luckfox-lyra/#interfaces","title":"Interfaces","text":"<ul> <li>Display: SPI interface for LCD</li> <li>Camera: MIPI CSI interface (not used in PicoCalc)</li> <li>USB: USB 2.0 OTG (headers only - requires USB adapter)</li> <li>GPIO: Multiple GPIO pins</li> <li>Audio: I2S audio interface</li> <li>Network: Ethernet MAC (PHY depends on version)</li> </ul> <p>Complete Interface Documentation</p> <p>For detailed pinout diagrams and interface specifications, refer to the official Luckfox Lyra documentation and pinout reference.</p> <p>WiFi Not Included</p> <p>The Luckfox Lyra does not have built-in WiFi. Wireless connectivity requires an external USB WiFi adapter (must operate at 3.3V) connected to the USB header.</p>"},{"location":"hardware/luckfox-lyra/#audio","title":"Audio","text":"<ul> <li>Default: Software PWM audio output (poor quality)</li> <li>Hardware Interface: I2S audio interface available</li> <li>PWM Output: Requires hardware modification for good quality</li> </ul> <p>Audio Quality Limitations</p> <p>The default software PWM audio driver has very poor performance and is not suitable for general use. For good audio quality, hardware modifications are required. Current alpha images do not support audio driver selection, but this could be implemented through module blacklisting in the future.</p>"},{"location":"hardware/luckfox-lyra/#power","title":"Power","text":"<ul> <li>Input Voltage: 5V</li> <li>Power Consumption: </li> <li>Idle: ~0.5-0.52W</li> <li>Light use (gaming): ~0.59-0.60W  </li> <li>With WiFi connected: ~0.63-1.1W</li> <li>USB-C Power Delivery: Supported</li> <li>Battery Operation: Supported but significantly reduced life vs stock firmware</li> </ul> <p>Real-World Power Data</p> <p>Community testing shows actual power consumption ranging from 0.5W idle to over 1W with WiFi active. Battery life is typically 2-4 hours depending on usage.</p>"},{"location":"hardware/luckfox-lyra/#luckfox-lyra-versions","title":"Luckfox Lyra Versions","text":"<p>Calculinux currently supports two variants of the Luckfox Lyra board available from https://www.luckfox.com/Luckfox-Lyra:</p> Model RAM Flash Notes Standard 128MB None SD card only - Recommended SPI NAND 128MB 128MB-1GB Requires NAND erase before use <p>Recommended Version</p> <p>The standard 128MB version without SPI NAND is recommended for simplicity. Both variants have identical performance for Calculinux.</p> <p>Other Variants Not Yet Supported</p> <p>Other Luckfox variants mentioned in community discussions (Lyra Zero W, Lyra Pi, Lyra Plus) could potentially be supported in the future but have not been attempted. Current images are only tested on the two variants listed above.</p> <p>SPI NAND Versions</p> <p>If your board has SPI NAND, you must erase it first or the board will boot from NAND instead of the SD card. See the troubleshooting guide for instructions.</p>"},{"location":"hardware/luckfox-lyra/#why-luckfox-lyra-for-picocalc","title":"Why Luckfox Lyra for PicoCalc?","text":"<p>The Luckfox Lyra is particularly well-suited for PicoCalc:</p> <ol> <li>Size: Compact form factor fits inside PicoCalc</li> <li>Power: Efficient enough for battery operation</li> <li>Performance: Sufficient for Linux console applications and development</li> <li>Interfaces: SPI and GPIO interfaces match PicoCalc requirements</li> <li>Community: Active development and support</li> <li>Cost: Affordable pricing</li> </ol>"},{"location":"hardware/luckfox-lyra/#driver-support-in-calculinux","title":"Driver Support in Calculinux","text":"<p>Calculinux includes custom kernel drivers developed specifically for the Luckfox Lyra + PicoCalc combination:</p>"},{"location":"hardware/luckfox-lyra/#lcd-driver","title":"LCD Driver","text":"<ul> <li>SPI-based display interface</li> <li>Custom framebuffer driver</li> <li>Optimized for PicoCalc's display panel</li> <li>Resolution and refresh rate tuning</li> </ul>"},{"location":"hardware/luckfox-lyra/#keyboard-driver","title":"Keyboard Driver","text":"<ul> <li>Matrix keyboard scanning</li> <li>Key mapping for PicoCalc layout</li> <li>Input event handling</li> <li>Debouncing and repeat rate configuration</li> </ul>"},{"location":"hardware/luckfox-lyra/#wifi-drivers","title":"WiFi Drivers","text":"<p>Calculinux includes drivers for external USB WiFi adapters with the following chipsets currently enabled in the kernel:</p> <ul> <li>RTL8192CU - Single-band USB WiFi adapter</li> <li>R8712U - Single-band USB WiFi adapter  </li> <li>R8188EU - Single-band USB WiFi adapter</li> <li>RTL8723BS - Dual-band SDIO WiFi (not typically used via USB)</li> </ul> <p>Additional chipsets that need kernel configuration: RTL8723DU, RTL8812AU, RTL8814AU, RTL8821CU, RTL88X2BU.</p> <p>Additional chipsets with pending support include: RTL8188FU, RTL8188FTV, RT2800 series, MT7612U, MT7610U, and RT5370. Community testing has confirmed these work but drivers are not yet included in official images.</p> <p>Critical 3.3V Requirement</p> <p>When selecting a USB WiFi adapter:</p> <ul> <li>MUST operate at 3.3V (Lyra USB header voltage) - 5V adapters will damage the board</li> <li>Verify chipset compatibility with the supported list above</li> <li>Compact form factor recommended for PicoCalc integration</li> <li>Consider power consumption for battery operation</li> </ul>"},{"location":"hardware/luckfox-lyra/#device-tree","title":"Device Tree","text":"<p>Calculinux includes a custom device tree configuration that:</p> <ul> <li>Defines PicoCalc hardware connections</li> <li>Configures SPI bus for display</li> <li>Maps GPIO pins for keyboard matrix</li> <li>Sets up USB and power management</li> </ul>"},{"location":"hardware/luckfox-lyra/#luckfox-sdk-vs-calculinux","title":"Luckfox SDK vs Calculinux","text":""},{"location":"hardware/luckfox-lyra/#official-luckfox-sdk","title":"Official Luckfox SDK","text":"<p>The Luckfox Lyra uses the Luckfox Pico SDK:</p> <ul> <li>Repository: https://github.com/LuckfoxTECH/luckfox-pico</li> <li>Documentation: Available in SDK repository</li> <li>Build System: Buildroot-based</li> <li>Community Usage: Most community images use this SDK</li> </ul>"},{"location":"hardware/luckfox-lyra/#calculinux-architecture","title":"Calculinux Architecture","text":"<p>Calculinux is independently developed with a different approach:</p> <ul> <li>Build System: Upstream Yocto (not Buildroot)</li> <li>Developer: 0xd61 (personal repository continuation)</li> <li>Relationship to SDK: Limited - only uses kernel and u-boot sources</li> <li>Kernel: Hosted externally to the SDK</li> <li>U-Boot: Hosted externally with custom patches</li> <li>Everything Else: Independent implementation with upstream compilers</li> </ul> <p>Independent Development</p> <p>While most community images are built with the Luckfox SDK and Buildroot, Calculinux is developed independently using upstream Yocto and only borrows the kernel and bootloader sources.</p>"},{"location":"hardware/luckfox-lyra/#other-major-community-images","title":"Other Major Community Images","text":"<p>For completeness, other distributions available for Luckfox Lyra include:</p> <ul> <li>hisptoot's Buildroot images - Original community port using Luckfox SDK</li> <li>markbirss's Ubuntu images - Ubuntu 22.04/24.04 based distributions</li> <li>Community Buildroot variants - Various SDK-based images with different features</li> </ul> <p>See the ClockworkPi forum thread for links to these alternative distributions.</p>"},{"location":"hardware/luckfox-lyra/#hardware-considerations","title":"Hardware Considerations","text":""},{"location":"hardware/luckfox-lyra/#boot-media-priority","title":"Boot Media Priority","text":"<p>The RK3506G2 boot process follows this priority:</p> <ol> <li>SPI NAND (if present and programmed)</li> <li>SD Card (if SPI NAND is erased or absent)</li> <li>USB Boot (for recovery/programming)</li> </ol> <p>Important for SPI NAND Versions</p> <p>If your Luckfox Lyra has SPI NAND, the boot ROM will always try NAND first. You must erase the NAND or it will ignore the SD card completely. See Boot Problems for instructions.</p>"},{"location":"hardware/luckfox-lyra/#thermal-management","title":"Thermal Management","text":"<p>The RV1106 can generate heat under load:</p> <ul> <li>Generally safe without heatsink for typical use</li> <li>Consider heat dissipation in enclosed PicoCalc case</li> <li>Monitor temperatures during intensive tasks</li> </ul>"},{"location":"hardware/luckfox-lyra/#power-supply","title":"Power Supply","text":"<p>Proper power delivery is critical:</p> <ul> <li>Use quality USB-C cable</li> <li>Ensure 5V/2A minimum supply</li> <li>Battery operation is supported but monitor voltage</li> <li>Under-voltage can cause instability</li> </ul>"},{"location":"hardware/luckfox-lyra/#purchasing","title":"Purchasing","text":"<p>Luckfox Lyra boards are available from:</p> <ul> <li>Luckfox Official Store: https://www.luckfox.com/Luckfox-Lyra</li> <li>AliExpress: Search for \"Luckfox Lyra\"</li> <li>Other Distributors: Check Luckfox website for authorized sellers</li> </ul> <p>Official Source</p> <p>The official Luckfox website is the authoritative source for current specifications and available variants.</p>"},{"location":"hardware/luckfox-lyra/#resources","title":"Resources","text":""},{"location":"hardware/luckfox-lyra/#official-documentation","title":"Official Documentation","text":"<ul> <li>Luckfox Website: https://www.luckfox.com/</li> <li>GitHub SDK: Luckfox Pico SDK</li> <li>Wiki: Luckfox Wiki</li> </ul>"},{"location":"hardware/luckfox-lyra/#community-resources","title":"Community Resources","text":"<ul> <li>Forum Thread: Luckfox Lyra on PicoCalc</li> <li>Original Port: hisptoot's Google Drive with initial images and drivers</li> </ul>"},{"location":"hardware/luckfox-lyra/#next-steps","title":"Next Steps","text":"<ul> <li>Review Hardware Modifications for installation guide</li> <li>Check Display &amp; Input for driver details</li> <li>See Compatibility Matrix for version compatibility</li> <li>Learn about power management considerations</li> </ul>"},{"location":"hardware/modifications/","title":"Hardware Modifications","text":"<p>This guide covers the physical modifications required to install a Luckfox Lyra (or similar SBC) into your PicoCalc.</p> <p>Warranty Warning</p> <p>Opening your PicoCalc and replacing the SBC will void your warranty. Proceed at your own risk. This modification requires careful handling of small components and connectors.</p>"},{"location":"hardware/modifications/#prerequisites","title":"Prerequisites","text":""},{"location":"hardware/modifications/#tools-required","title":"Tools Required","text":"<ul> <li>Small Phillips screwdriver</li> <li>Plastic spudger or opening tool</li> <li>ESD-safe work surface (or ESD wrist strap)</li> <li>Tweezers (optional but helpful)</li> <li>Good lighting and magnification (optional)</li> </ul>"},{"location":"hardware/modifications/#parts-needed","title":"Parts Needed","text":"<ul> <li>Luckfox Lyra SBC (see compatible versions)</li> <li>MicroSD card (8GB minimum, 16GB+ recommended)</li> <li>(Optional) Thermal pad or paste if concerned about heat</li> </ul>"},{"location":"hardware/modifications/#disassembly","title":"Disassembly","text":""},{"location":"hardware/modifications/#step-1-power-off-and-disconnect","title":"Step 1: Power Off and Disconnect","text":"<ol> <li>Power off the PicoCalc completely</li> <li>Disconnect any USB cables</li> <li>Remove any attached peripherals</li> </ol>"},{"location":"hardware/modifications/#step-2-open-the-case","title":"Step 2: Open the Case","text":"<p>Take Photos</p> <p>Before disassembly, take photos of the original configuration. This helps during reassembly.</p> <ol> <li>Locate the screws holding the case together (typically on the back)</li> <li>Remove all screws and keep them organized</li> <li>Carefully separate the case halves using a plastic spudger</li> <li>Be mindful of any ribbon cables connecting the halves</li> </ol>"},{"location":"hardware/modifications/#step-3-remove-original-board","title":"Step 3: Remove Original Board","text":"<ol> <li>Locate the existing RP2040/Pico board</li> <li>Carefully disconnect the main connector</li> <li>Note the orientation of the board and connector</li> <li>Remove any screws holding the board in place</li> <li>Gently lift the board out</li> </ol> <p>Connector Orientation</p> <p>The connector orientation is critical. The Luckfox Lyra must be installed with the same orientation as the original board. Mark or photograph the correct orientation. For reference pinout diagrams, consult the official Luckfox Lyra pinout documentation.</p>"},{"location":"hardware/modifications/#installation","title":"Installation","text":""},{"location":"hardware/modifications/#step-4-prepare-luckfox-lyra","title":"Step 4: Prepare Luckfox Lyra","text":"<p>Before installation:</p> <ol> <li>Erase SPI NAND (if your board has it) - see SPI NAND Erasing</li> <li>Flash Calculinux to your microSD card - see Installation Guide</li> <li>Insert the prepared microSD card into the Luckfox Lyra</li> </ol>"},{"location":"hardware/modifications/#step-5-install-luckfox-lyra","title":"Step 5: Install Luckfox Lyra","text":"<ol> <li>Position the Luckfox Lyra in the same orientation as the original board</li> <li>Carefully align the connector with the PicoCalc socket</li> <li>Gently but firmly press the connector into place</li> <li>Secure the board with screws if mounting holes align</li> <li>Verify the connection is seated properly</li> </ol> <p>Connector Care</p> <p>The connector is delicate. Apply even pressure and ensure proper alignment before pushing it in. Do not force it.</p>"},{"location":"hardware/modifications/#step-6-reassembly","title":"Step 6: Reassembly","text":"<ol> <li>Route any cables carefully (avoid pinching)</li> <li>Align the case halves</li> <li>Gently press together until they click</li> <li>Replace all screws</li> <li>Verify nothing is binding or misaligned</li> </ol>"},{"location":"hardware/modifications/#erasing-spi-nand","title":"Erasing SPI NAND","text":"<p>If your Luckfox Lyra has SPI NAND flash, you must erase it for the board to boot from SD card.</p>"},{"location":"hardware/modifications/#method-1-using-luckfox-tools","title":"Method 1: Using Luckfox Tools","text":"<ol> <li>Download Luckfox SDK and tools from GitHub</li> <li>Connect Luckfox Lyra via USB while holding boot button</li> <li>Use <code>upgrade_tool</code> to erase NAND:    <pre><code>upgrade_tool ef\n</code></pre></li> <li>Wait for confirmation message</li> <li>Disconnect and reconnect power</li> </ol>"},{"location":"hardware/modifications/#method-2-using-u-boot","title":"Method 2: Using U-Boot","text":"<p>If you can boot to U-Boot prompt:</p> <pre><code># Erase entire NAND\nnand erase.chip\n\n# Or erase specific partition\nsf probe 0\nsf erase 0 0x1000000\n</code></pre>"},{"location":"hardware/modifications/#method-3-from-running-system","title":"Method 3: From Running System","text":"<p>If you have a working Linux system on the board:</p> <pre><code># Identify NAND device\ncat /proc/mtd\n\n# Erase NAND (assuming mtd0)\nflash_erase /dev/mtd0 0 0\n</code></pre> <p>One-Time Operation</p> <p>You only need to erase the NAND once. After erasing, the board will always boot from SD card (unless you reprogram the NAND).</p>"},{"location":"hardware/modifications/#pin-mapping","title":"Pin Mapping","text":"<p>Understanding the pin connections helps with troubleshooting:</p>"},{"location":"hardware/modifications/#display-connection","title":"Display Connection","text":"Luckfox Pin Function PicoCalc Connection SPI MOSI Data Out LCD Data In SPI SCK Clock LCD Clock GPIO CS (Chip Select) LCD CS GPIO DC (Data/Command) LCD DC GPIO Reset LCD Reset 3.3V Power LCD VCC GND Ground LCD GND"},{"location":"hardware/modifications/#gpio-and-rmio-pin-mapping","title":"GPIO and RMIO Pin Mapping","text":"<p>The Luckfox Lyra uses both standard GPIO and RMIO (Reconfigurable Multi-function IO) pins:</p> PicoCalc Pin Luckfox Equivalent Type Voltage Notes GP2 RMIO12 RMIO 3.3V Reconfigurable GP3 RMIO13 RMIO 3.3V Reconfigurable GP4 RMIO0 RMIO 3.3V Used for audio (PWM) GP5 RMIO1 RMIO 3.3V Reconfigurable GP21 RMIO26 RMIO 3.3V Reconfigurable GP28 RMIO24 RMIO 3.3V Reconfigurable <p>GPIO Voltage Levels</p> <ul> <li>RMIO pins: 3.3V operation</li> <li>GPIO4_B3/GPIO4_B2: 1.8V operation (not RMIO-capable)</li> <li>Always verify voltage levels before hardware modifications</li> </ul> <p>Hardware PWM Limitation</p> <p>Some GPIO pins (like GPIO4_B3 and GPIO4_B2) cannot output hardware PWM as they are not RMIO-capable. For audio modifications, use RMIO pins that support hardware PWM.</p>"},{"location":"hardware/modifications/#keyboard-matrix","title":"Keyboard Matrix","text":"<p>The keyboard matrix connects via GPIO pins. Exact mapping is defined in the device tree. See Display &amp; Input for details.</p>"},{"location":"hardware/modifications/#power","title":"Power","text":"<ul> <li>5V In: From USB-C connector via PicoCalc board</li> <li>3.3V Regulation: On Luckfox Lyra board</li> <li>Current Draw: ~500mA typical, up to 1A peak</li> </ul>"},{"location":"hardware/modifications/#verification","title":"Verification","text":"<p>After installation:</p> <ol> <li>Visual Check: Ensure board is seated properly</li> <li>Power On: Connect USB-C power</li> <li>Boot Check: Look for display activity</li> <li>LED Indicators: Observe any status LEDs on Luckfox board</li> </ol> <p>If the system doesn't boot, see Boot Problems.</p>"},{"location":"hardware/modifications/#common-issues","title":"Common Issues","text":""},{"location":"hardware/modifications/#board-wont-boot","title":"Board Won't Boot","text":"<ul> <li>SPI NAND not erased: Most common issue with NAND versions</li> <li>SD card not flashed correctly: Verify image integrity</li> <li>Connector not seated: Reseat the board carefully</li> <li>Power insufficient: Try different USB cable/adapter</li> </ul>"},{"location":"hardware/modifications/#display-not-working","title":"Display Not Working","text":"<ul> <li>Driver not loaded: Check kernel logs</li> <li>Connection issue: Reseat display cable</li> <li>Wrong device tree: Verify correct DTB is loaded</li> </ul>"},{"location":"hardware/modifications/#keyboard-not-responsive","title":"Keyboard Not Responsive","text":"<ul> <li>Driver not loaded: Check kernel logs</li> <li>GPIO mapping wrong: Verify device tree configuration</li> <li>Connection issue: Reseat board connector</li> </ul>"},{"location":"hardware/modifications/#safety-considerations","title":"Safety Considerations","text":""},{"location":"hardware/modifications/#electrical-safety","title":"Electrical Safety","text":"<ul> <li>Work on ESD-safe surface</li> <li>Avoid static discharge to components</li> <li>Never work on powered device</li> <li>Check for shorts before powering on</li> </ul>"},{"location":"hardware/modifications/#mechanical-safety","title":"Mechanical Safety","text":"<ul> <li>Don't force connectors</li> <li>Handle PCBs by edges</li> <li>Watch for sharp edges on case</li> <li>Keep screws organized</li> </ul>"},{"location":"hardware/modifications/#thermal-considerations","title":"Thermal Considerations","text":"<ul> <li>Luckfox can get warm under load</li> <li>Ensure adequate ventilation</li> <li>Consider thermal pad if needed</li> <li>Monitor temperatures initially</li> </ul>"},{"location":"hardware/modifications/#reverting-to-original","title":"Reverting to Original","text":"<p>To restore the original RP2040 board:</p> <ol> <li>Follow disassembly steps above</li> <li>Remove Luckfox Lyra</li> <li>Reinstall original board in reverse order</li> <li>Reflash original firmware if needed</li> </ol> <p>Keep Original Board</p> <p>Store the original RP2040 board safely in case you want to revert or use it elsewhere.</p>"},{"location":"hardware/modifications/#advanced-modifications","title":"Advanced Modifications","text":""},{"location":"hardware/modifications/#optional-enhancements","title":"Optional Enhancements","text":"<ul> <li>Heat sink: Add small heat sink to RV1106 SoC</li> <li>Thermal pad: Use thermal interface material</li> <li>Mounting: Create custom mounting bracket</li> <li>Cables: Add internal USB extension for easier access</li> </ul>"},{"location":"hardware/modifications/#future-compatibility","title":"Future Compatibility","text":"<p>The modification process should be similar for other SBCs:</p> <ul> <li>Milk-V Duo (future support)</li> <li>Other Rockchip-based boards</li> <li>Custom carrier boards</li> </ul>"},{"location":"hardware/modifications/#resources","title":"Resources","text":"<ul> <li>Video Guide: YouTube - Luckfox Lyra on PicoCalc</li> <li>Forum Discussion: ClockworkPi Forum Thread</li> <li>Image Files: Check forum thread for community-shared modifications</li> </ul>"},{"location":"hardware/modifications/#next-steps","title":"Next Steps","text":"<p>After successful installation:</p> <ul> <li>Follow First Boot guide</li> <li>Configure system per Configuration Guide</li> <li>Explore User Guide</li> </ul>"},{"location":"hardware/picocalc/","title":"PicoCalc Overview","text":"<p>The PicoCalc is a pocket-sized handheld computing device created by ClockworkPi that features a modular design allowing for different computing modules.</p>"},{"location":"hardware/picocalc/#what-is-picocalc","title":"What is PicoCalc?","text":"<p>PicoCalc is a unique handheld device that combines:</p> <ul> <li>A physical keyboard layout</li> <li>A built-in display</li> <li>A modular SBC (Single Board Computer) slot</li> <li>USB-C connectivity</li> <li>Battery power capability</li> </ul> <p>About the Name</p> <p>The \"PicoCalc\" name suggests its intended purpose for calculation and computation work, though it's primarily a clever branding choice rather than a literal description. The device is roughly the size of a large calculator but is designed as a general-purpose computing platform.</p>"},{"location":"hardware/picocalc/#original-hardware","title":"Original Hardware","text":"<p>The PicoCalc originally ships with a Raspberry Pi Pico or RP2040-based microcontroller running PicoMite MMBasic. While functional for programming tasks and computation, replacing this with a more powerful SBC unlocks the device's full potential as a pocket Linux computer.</p>"},{"location":"hardware/picocalc/#why-replace-the-sbc","title":"Why Replace the SBC?","text":"<p>Upgrading from the stock microcontroller to an SBC like the Luckfox Lyra provides:</p> <ul> <li>Full Linux OS instead of firmware</li> <li>Significantly more processing power</li> <li>More RAM (typically 64MB-256MB vs. 264KB)</li> <li>Network connectivity options</li> <li>Storage expansion via SD card</li> <li>Rich software ecosystem</li> </ul>"},{"location":"hardware/picocalc/#physical-specifications","title":"Physical Specifications","text":"Specification Details Dimensions Pocket-sized handheld form factor Display Built-in LCD screen Input Physical keyboard with compact layout Power USB-C port, battery operation Module Interface Custom connector for SBC modules"},{"location":"hardware/picocalc/#display","title":"Display","text":"<p>The PicoCalc features an integrated LCD display that requires proper driver support in the Linux kernel. Key characteristics:</p> <ul> <li>LCD panel with SPI interface</li> <li>Resolution: (specifications to be documented)</li> <li>Requires custom kernel drivers for Linux support</li> </ul>"},{"location":"hardware/picocalc/#keyboard","title":"Keyboard","text":"<p>The keyboard provides:</p> <ul> <li>Compact key layout suitable for programming and computation</li> <li>Matrix keyboard interface</li> <li>Requires custom kernel drivers for Linux support</li> <li>Includes numeric keypad and function keys</li> </ul> <p>Keyboard Layout</p> <p>While the PicoCalc includes a numeric keypad among other keys, it's designed as a general-purpose input device rather than a traditional calculator keypad. The layout is optimized for programming and computational work.</p>"},{"location":"hardware/picocalc/#module-connector","title":"Module Connector","text":"<p>The internal connector provides:</p> <ul> <li>Power delivery to the SBC</li> <li>Display interface (SPI)</li> <li>Keyboard interface</li> <li>GPIO access</li> <li>USB connectivity</li> </ul> <p>Hardware Modification Required</p> <p>Installing a Luckfox Lyra or similar SBC requires opening the PicoCalc case and replacing the original board. This process involves careful handling of the internal connector and components. See Hardware Modifications for detailed instructions.</p>"},{"location":"hardware/picocalc/#compatibility","title":"Compatibility","text":"<p>The PicoCalc's modular design potentially supports various SBCs with the right adapters and modifications:</p> <ul> <li>\u2705 Luckfox Lyra - Fully supported by Calculinux</li> <li>\ud83d\udea7 Milk-V Duo - Future support planned</li> <li>\u2753 Other SBCs - Community experimentation ongoing</li> </ul> <p>See the Compatibility Matrix for detailed information.</p>"},{"location":"hardware/picocalc/#resources","title":"Resources","text":"<ul> <li>Official Product Page: ClockworkPi PicoCalc</li> <li>Community Forum: PicoCalc Category</li> <li>Hardware Discussion: Forum Thread</li> </ul>"},{"location":"hardware/picocalc/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about the Luckfox Lyra SBC</li> <li>Review Hardware Modifications guide</li> <li>Check Display &amp; Input technical details</li> </ul>"},{"location":"resources/community/","title":"Community &amp; Support","text":"<p>Connect with the Calculinux community and get support.</p>"},{"location":"resources/community/#official-channels","title":"Official Channels","text":""},{"location":"resources/community/#forum","title":"Forum","text":"<p>The primary discussion platform for Calculinux and PicoCalc modifications:</p> <p>ClockworkPi Forum - Luckfox Lyra Thread - URL: forum.clockworkpi.com/t/luckfox-lyra-on-picocalc/16280 - Purpose: General discussion, questions, showcase projects - Activity: Active community, quick responses - Original port discussion and ongoing development</p>"},{"location":"resources/community/#github","title":"GitHub","text":"<p>Source Code &amp; Issues - Repository: github.com/Calculinux/meta-calculinux - Issues: Bug reports and feature requests - Pull Requests: Code contributions - Discussions: Development planning</p> <p>Documentation - Repository: github.com/Calculinux/docs - Issues: Documentation improvements - Website: calculinux.github.io/docs</p>"},{"location":"resources/community/#community-guidelines","title":"Community Guidelines","text":""},{"location":"resources/community/#be-respectful","title":"Be Respectful","text":"<ul> <li>Treat all community members with respect</li> <li>Be patient with beginners</li> <li>Provide constructive feedback</li> <li>Help others when you can</li> </ul>"},{"location":"resources/community/#stay-on-topic","title":"Stay On Topic","text":"<ul> <li>Keep discussions relevant to Calculinux/PicoCalc</li> <li>Use appropriate channels for different topics</li> <li>Search before posting duplicates</li> </ul>"},{"location":"resources/community/#share-knowledge","title":"Share Knowledge","text":"<ul> <li>Document your solutions</li> <li>Share your projects</li> <li>Contribute improvements</li> <li>Help maintain documentation</li> </ul>"},{"location":"resources/community/#getting-help","title":"Getting Help","text":""},{"location":"resources/community/#before-asking","title":"Before Asking","text":"<ol> <li>Check Documentation: Read relevant sections</li> <li>Search Forum: Someone may have had the same issue</li> <li>Check Issues: Look for existing GitHub issues</li> <li>Try Troubleshooting: Follow troubleshooting guides</li> </ol>"},{"location":"resources/community/#how-to-ask","title":"How to Ask","text":"<p>Good Question Format:</p> <pre><code>Subject: Clear, specific title\n\nHardware:\n- Luckfox Lyra 128MB (no NAND)\n- SanDisk 16GB SD card\n- 5V/2A USB-C power\n\nSoftware:\n- Calculinux base image v1.0\n\nProblem:\n[Clear description of issue]\n\nWhat I've Tried:\n1. Step one\n2. Step two\n\nError Messages:\n[Paste relevant error messages]\n\nLogs:\n[Relevant portions of dmesg or journalctl]\n</code></pre>"},{"location":"resources/community/#what-to-include","title":"What to Include","text":"<ul> <li>Hardware specifications</li> <li>Software version</li> <li>Exact error messages</li> <li>Steps to reproduce</li> <li>What you've already tried</li> <li>Relevant log excerpts</li> </ul>"},{"location":"resources/community/#contributing","title":"Contributing","text":""},{"location":"resources/community/#ways-to-contribute","title":"Ways to Contribute","text":"<p>Code Contributions - Bug fixes - New features - Driver improvements - See Contributing Guide</p> <p>Documentation - Fix typos and errors - Add missing information - Create tutorials - Translate to other languages</p> <p>Testing - Test on different hardware - Report compatibility - Verify bug fixes - Test new features</p> <p>Community Support - Answer questions on forum - Help troubleshoot issues - Share your projects - Write blog posts/tutorials</p>"},{"location":"resources/community/#project-maintainers","title":"Project Maintainers","text":""},{"location":"resources/community/#core-team","title":"Core Team","text":"<ul> <li>hisptoot - Original port and driver development</li> <li>Community contributors - Various improvements</li> </ul> <p>Want to become a maintainer? Contribute regularly and show your commitment!</p>"},{"location":"resources/community/#related-communities","title":"Related Communities","text":""},{"location":"resources/community/#clockworkpi","title":"ClockworkPi","text":"<ul> <li>Main Forum: forum.clockworkpi.com</li> <li>Other Projects: GameShell, DevTerm, uConsole</li> <li>General Hardware: Discussions about ClockworkPi devices</li> </ul>"},{"location":"resources/community/#luckfox","title":"Luckfox","text":"<ul> <li>Official Site: luckfox.com</li> <li>GitHub: github.com/LuckfoxTECH</li> <li>Community: Luckfox user communities</li> </ul>"},{"location":"resources/community/#embedded-linux","title":"Embedded Linux","text":"<ul> <li>eLinux.org: elinux.org</li> <li>Yocto Community: yoctoproject.org/community</li> <li>Reddit /r/embedded: reddit.com/r/embedded</li> </ul>"},{"location":"resources/community/#events-meetings","title":"Events &amp; Meetings","text":""},{"location":"resources/community/#community-calls","title":"Community Calls","text":"<p>(To be organized as community grows)</p> <ul> <li>Monthly developer calls</li> <li>Release planning meetings</li> <li>Community showcases</li> </ul>"},{"location":"resources/community/#conferences","title":"Conferences","text":"<p>Relevant conferences where Calculinux might be presented:</p> <ul> <li>Embedded Linux Conference</li> <li>FOSDEM</li> <li>Maker Faires</li> <li>Local Linux User Groups</li> </ul>"},{"location":"resources/community/#social-media","title":"Social Media","text":"<p>Stay updated on Calculinux development:</p> <ul> <li>Check forum for announcements</li> <li>Watch GitHub repository</li> <li>Follow related projects</li> </ul>"},{"location":"resources/community/#recognition","title":"Recognition","text":""},{"location":"resources/community/#hall-of-fame","title":"Hall of Fame","text":"<p>Recognition for significant contributors:</p> <ul> <li>hisptoot - Original Luckfox Lyra port, LCD driver, keyboard driver</li> <li>Contributors welcome! Your name could be here.</li> </ul>"},{"location":"resources/community/#showcase","title":"Showcase","text":"<p>Share your Calculinux projects:</p> <ul> <li>Post in forum with \"Showcase\" tag</li> <li>Include photos/videos</li> <li>Describe your use case</li> <li>Share your code if open source</li> </ul>"},{"location":"resources/community/#resources-for-contributors","title":"Resources for Contributors","text":""},{"location":"resources/community/#development-resources","title":"Development Resources","text":"<ul> <li>Developer Guide</li> <li>Contributing Guidelines</li> <li>Yocto Documentation</li> </ul>"},{"location":"resources/community/#communication-resources","title":"Communication Resources","text":"<ul> <li>Forum etiquette</li> <li>GitHub pull request guidelines</li> <li>Code of conduct (in development)</li> </ul>"},{"location":"resources/community/#contact","title":"Contact","text":""},{"location":"resources/community/#public-contact","title":"Public Contact","text":"<ul> <li>Forum: Best for general questions</li> <li>GitHub Issues: For bugs and features</li> <li>GitHub Discussions: For development topics</li> </ul>"},{"location":"resources/community/#private-contact","title":"Private Contact","text":"<p>For sensitive issues (security vulnerabilities, etc.):</p> <ul> <li>Open a security issue on GitHub</li> <li>Contact maintainers directly (info in GitHub profiles)</li> </ul>"},{"location":"resources/community/#license-legal","title":"License &amp; Legal","text":"<ul> <li>Code: Various open source licenses (see individual repositories)</li> <li>Documentation: CC BY 4.0</li> <li>Trademarks: Respect all trademarks</li> </ul>"},{"location":"resources/community/#code-of-conduct","title":"Code of Conduct","text":""},{"location":"resources/community/#summary","title":"Summary","text":"<ul> <li>Be kind and courteous</li> <li>Respect different viewpoints</li> <li>Accept constructive criticism</li> <li>Focus on what's best for the community</li> <li>Show empathy toward other members</li> </ul> <p>Full code of conduct: (To be added)</p>"},{"location":"resources/community/#supporting-the-project","title":"Supporting the Project","text":""},{"location":"resources/community/#non-code-contributions","title":"Non-Code Contributions","text":"<ul> <li>Write documentation</li> <li>Create tutorials</li> <li>Test and report bugs</li> <li>Help others in forum</li> <li>Spread the word</li> </ul>"},{"location":"resources/community/#sponsorship","title":"Sponsorship","text":"<p>(To be determined as project matures)</p> <ul> <li>Infrastructure costs</li> <li>Development hardware</li> <li>Community initiatives</li> </ul>"},{"location":"resources/community/#stay-connected","title":"Stay Connected","text":"<p>Don't be a stranger! The Calculinux community is friendly and welcoming.</p> <ul> <li>\ud83d\udcac Join the forum discussion</li> <li>\u2b50 Star the GitHub repository  </li> <li>\ud83d\udce2 Share your projects</li> <li>\ud83e\udd1d Help fellow users</li> <li>\ud83d\udcbb Contribute code or documentation</li> </ul> <p>Welcome to the Calculinux community! \ud83c\udf89</p>"},{"location":"resources/external-docs/","title":"External Documentation &amp; Resources","text":"<p>This page provides links to external documentation, resources, and references that are helpful for working with Calculinux, the PicoCalc, and related technologies.</p>"},{"location":"resources/external-docs/#official-project-resources","title":"Official Project Resources","text":""},{"location":"resources/external-docs/#calculinux","title":"Calculinux","text":"Resource URL Description Main Repository github.com/Calculinux/meta-calculinux Yocto layer and build system Documentation github.com/Calculinux/docs This documentation source Meta Layer github.com/Calculinux/meta-calculinux Main Yocto meta-layer"},{"location":"resources/external-docs/#clockworkpi-picocalc","title":"ClockworkPi / PicoCalc","text":"Resource URL Description Official Website clockworkpi.com Manufacturer website PicoCalc Forum forum.clockworkpi.com/c/picocalc/31 Official forum category Luckfox Thread forum thread Original port discussion"},{"location":"resources/external-docs/#luckfox","title":"Luckfox","text":"Resource URL Description Official Website luckfox.com Manufacturer website Pico SDK github.com/LuckfoxTECH/luckfox-pico Official SDK (Buildroot) Wiki wiki.luckfox.com Documentation"},{"location":"resources/external-docs/#build-system-documentation","title":"Build System Documentation","text":""},{"location":"resources/external-docs/#yocto-project","title":"Yocto Project","text":"Resource URL Description Main Website yoctoproject.org Official Yocto site Documentation docs.yoctoproject.org Complete documentation Quick Start Quick Build Guide Getting started Mega-Manual Mega-Manual All-in-one reference Dev Manual Developer Manual Development guide Kernel Manual Kernel Dev Manual Kernel development Board Support BSP Guide BSP creation"},{"location":"resources/external-docs/#openembedded","title":"OpenEmbedded","text":"Resource URL Description Main Website openembedded.org Project homepage Layer Index layers.openembedded.org Find layers/recipes User Manual OE User Manual Usage guide"},{"location":"resources/external-docs/#bitbake","title":"BitBake","text":"Resource URL Description Documentation BitBake Manual Build engine docs Syntax Reference Syntax Guide Recipe syntax"},{"location":"resources/external-docs/#hardware-documentation","title":"Hardware Documentation","text":""},{"location":"resources/external-docs/#rockchip-rv1106","title":"Rockchip RV1106","text":"Resource URL Description SDK github.com/rockchip-linux Rockchip Linux repos Kernel Rockchip Kernel Kernel source Documentation Rockchip Wiki Chip documentation (when available)"},{"location":"resources/external-docs/#arm-cortex-a7","title":"ARM Cortex-A7","text":"Resource URL Description ARM Developer developer.arm.com Processor documentation Technical Manual ARM Documentation TRM"},{"location":"resources/external-docs/#linux-kernel-resources","title":"Linux Kernel Resources","text":""},{"location":"resources/external-docs/#general-linux-development","title":"General Linux Development","text":"Resource URL Description Kernel.org kernel.org Official kernel source Documentation kernel.org/doc Kernel documentation Device Tree devicetree.org DT specification Linux Driver Project ldp.net Driver development"},{"location":"resources/external-docs/#arm-linux","title":"ARM Linux","text":"Resource URL Description ARM Linux arm.linux.org.uk ARM-specific info Device Tree Guide DT for ARM ARM DT bindings"},{"location":"resources/external-docs/#display-input","title":"Display &amp; Input","text":""},{"location":"resources/external-docs/#spi-lcd-st7789","title":"SPI LCD (ST7789)","text":"Resource URL Description Datasheet ST7789V Datasheet Display controller specs Linux Driver fbtft Framebuffer drivers Documentation Kernel fbdev Framebuffer docs"},{"location":"resources/external-docs/#input-subsystem","title":"Input Subsystem","text":"Resource URL Description Input Docs Kernel Input Input subsystem Event Codes input-event-codes.h Key definitions"},{"location":"resources/external-docs/#development-tools","title":"Development Tools","text":""},{"location":"resources/external-docs/#cross-compilation","title":"Cross-Compilation","text":"Resource URL Description Crosstool-NG crosstool-ng.github.io Toolchain builder ARM Toolchains ARM GNU Official toolchains"},{"location":"resources/external-docs/#debugging","title":"Debugging","text":"Resource URL Description GDB gnu.org/software/gdb GNU debugger OpenOCD openocd.org On-chip debugging JTAG Info Various Hardware debugging"},{"location":"resources/external-docs/#version-control","title":"Version Control","text":"Resource URL Description Git git-scm.com Version control Git Book Git Pro Book Comprehensive guide"},{"location":"resources/external-docs/#linux-distribution-resources","title":"Linux Distribution Resources","text":""},{"location":"resources/external-docs/#package-management","title":"Package Management","text":"Resource URL Description opkg opkg docs Package manager Package Feeds Configured in Calculinux Software repositories"},{"location":"resources/external-docs/#system-management","title":"System Management","text":"Resource URL Description systemd systemd.io Init system systemd Docs freedesktop.org Complete manual"},{"location":"resources/external-docs/#desktop-environments","title":"Desktop Environments","text":"<p>Future Feature</p> <p>Desktop environments are not currently implemented in Calculinux. These resources are provided for future reference if GUI support is added.</p>"},{"location":"resources/external-docs/#lightweight-options","title":"Lightweight Options","text":"Resource URL Description LXDE lxde.org Lightweight desktop XFCE xfce.org Feature-rich lightweight i3 i3wm.org Tiling window manager Openbox openbox.org Minimal WM"},{"location":"resources/external-docs/#display-servers","title":"Display Servers","text":"Resource URL Description X.Org x.org X11 server Wayland wayland.freedesktop.org Modern display protocol"},{"location":"resources/external-docs/#programming-languages","title":"Programming Languages","text":""},{"location":"resources/external-docs/#cc","title":"C/C++","text":"Resource URL Description GCC gcc.gnu.org GNU compiler C++ Reference cppreference.com Language reference"},{"location":"resources/external-docs/#python","title":"Python","text":"Resource URL Description Python.org python.org Official Python PyPI pypi.org Package index"},{"location":"resources/external-docs/#shell-scripting","title":"Shell Scripting","text":"Resource URL Description Bash Guide gnu.org/software/bash Bash manual ShellCheck shellcheck.net Script analysis"},{"location":"resources/external-docs/#community-learning","title":"Community &amp; Learning","text":""},{"location":"resources/external-docs/#forums-discussion","title":"Forums &amp; Discussion","text":"Resource URL Description ClockworkPi Forum forum.clockworkpi.com Official forums Yocto Mailing Lists yoctoproject.org/community Yocto community Stack Overflow stackoverflow.com Q&amp;A site Reddit /r/embedded reddit.com/r/embedded Embedded Linux"},{"location":"resources/external-docs/#learning-resources","title":"Learning Resources","text":"Resource URL Description Linux From Scratch linuxfromscratch.org Build Linux from source Embedded Linux Wiki elinux.org Embedded Linux info Free Electrons bootlin.com Training materials"},{"location":"resources/external-docs/#video-tutorials","title":"Video Tutorials","text":"Resource URL Description YouTube Search \"Yocto Project Tutorial\" Video tutorials YouTube Search \"Embedded Linux\" General embedded info Original Video Luckfox on PicoCalc Hardware demo"},{"location":"resources/external-docs/#datasheets-specifications","title":"Datasheets &amp; Specifications","text":""},{"location":"resources/external-docs/#obtaining-datasheets","title":"Obtaining Datasheets","text":"<p>Many datasheets require registration or NDA:</p> <ul> <li>Rockchip: Contact for RV1106 documentation</li> <li>LCD Controllers: Search by part number</li> <li>Component Vendors: Check manufacturer websites</li> </ul>"},{"location":"resources/external-docs/#useful-specifications","title":"Useful Specifications","text":"Specification Description SPI Serial Peripheral Interface standard I2C Inter-Integrated Circuit bus USB 2.0 USB specification MIPI CSI Camera Serial Interface"},{"location":"resources/external-docs/#related-projects","title":"Related Projects","text":""},{"location":"resources/external-docs/#similar-devices","title":"Similar Devices","text":"Project URL Description PocketCHIP Archived Similar pocket computer GameShell ClockworkPi Gaming handheld DevTerm ClockworkPi Portable terminal"},{"location":"resources/external-docs/#embedded-linux-distributions","title":"Embedded Linux Distributions","text":"Distribution URL Focus Buildroot buildroot.org Lightweight builds OpenWrt openwrt.org Router focus Raspberry Pi OS raspberrypi.com RPi optimized"},{"location":"resources/external-docs/#books","title":"Books","text":""},{"location":"resources/external-docs/#recommended-reading","title":"Recommended Reading","text":"<p>Embedded Linux: - \"Mastering Embedded Linux Programming\" - Chris Simmonds - \"Embedded Linux Primer\" - Christopher Hallinan - \"Building Embedded Linux Systems\" - Karim Yaghmour</p> <p>Yocto/OpenEmbedded: - \"Embedded Linux Development Using Yocto Project\" - Otavio Salvador - \"Yocto for Raspberry Pi\" - Pierre-Jean Texier</p> <p>Kernel Development: - \"Linux Device Drivers\" - Corbet, Rubini, Kroah-Hartman - \"Linux Kernel Development\" - Robert Love</p> <p>General Linux: - \"The Linux Command Line\" - William Shotts - \"How Linux Works\" - Brian Ward</p>"},{"location":"resources/external-docs/#online-courses","title":"Online Courses","text":""},{"location":"resources/external-docs/#free-courses","title":"Free Courses","text":"<ul> <li>Yocto Project Training (bootlin.com)</li> <li>Embedded Linux Courses (various MOOCs)</li> <li>ARM University Program (free materials)</li> </ul>"},{"location":"resources/external-docs/#paid-courses","title":"Paid Courses","text":"<ul> <li>Linux Foundation courses</li> <li>Udemy embedded Linux courses</li> <li>Professional training companies</li> </ul>"},{"location":"resources/external-docs/#tools-utilities","title":"Tools &amp; Utilities","text":""},{"location":"resources/external-docs/#online-tools","title":"Online Tools","text":"Tool URL Purpose Device Tree Compiler devicetree.org DT compilation Regex Tester regex101.com Pattern testing Color Picker Various GUI development"},{"location":"resources/external-docs/#software-tools","title":"Software Tools","text":"<ul> <li>Etcher: balena.io/etcher - Image flashing</li> <li>PuTTY: putty.org - Serial terminal</li> <li>VS Code: code.visualstudio.com - Editor</li> </ul>"},{"location":"resources/external-docs/#standards-specifications","title":"Standards &amp; Specifications","text":"Standard Organization Relevance POSIX IEEE Unix standards FHS Linux Foundation Filesystem hierarchy LSB Linux Foundation Linux standards"},{"location":"resources/external-docs/#contributing-resources","title":"Contributing Resources","text":"<p>See Contributing Guide for Calculinux-specific guidelines.</p>"},{"location":"resources/external-docs/#general-open-source","title":"General Open Source","text":"Resource URL Description Open Source Guide opensource.guide Contributing basics How to Contribute GitHub guides PR workflow Code of Conduct Various Community standards"},{"location":"resources/external-docs/#stay-updated","title":"Stay Updated","text":""},{"location":"resources/external-docs/#news-sources","title":"News Sources","text":"<ul> <li>Phoronix - Linux hardware news</li> <li>LWN.net - Linux Weekly News  </li> <li>Hacker News - Tech discussions</li> <li>r/linux - Linux subreddit</li> </ul>"},{"location":"resources/external-docs/#blogs","title":"Blogs","text":"<ul> <li>Yocto Project Blog</li> <li>ClockworkPi Blog</li> <li>Embedded Linux blogs (various)</li> </ul>"},{"location":"resources/external-docs/#need-more-help","title":"Need More Help?","text":"<p>Can't find what you're looking for?</p> <ol> <li>Check our Troubleshooting section</li> <li>Search the Forum</li> <li>Ask in Community Chat</li> <li>Open a Documentation Issue</li> </ol>"},{"location":"resources/external-docs/#contributing-to-this-list","title":"Contributing to This List","text":"<p>Found a useful resource not listed here?</p> <ul> <li>Submit a pull request to add it</li> <li>Open an issue with the suggestion</li> <li>Post in the forum</li> </ul> <p>Last updated: October 2025</p>"},{"location":"troubleshooting/boot-problems/","title":"Boot Problems","text":"<p>Detailed troubleshooting for boot-related issues.</p>"},{"location":"troubleshooting/boot-problems/#system-wont-boot","title":"System Won't Boot","text":"<p>This section will be populated with detailed boot troubleshooting steps.</p>"},{"location":"troubleshooting/boot-problems/#spi-nand-interference","title":"SPI NAND Interference","text":"<p>Some Luckfox Lyra boards come with SPI NAND flash memory pre-installed. If your board has SPI NAND, you must erase it first or the board will attempt to boot from NAND instead of the SD card.</p> <p>To check if your board has SPI NAND: - Look for additional chip markings on the board - Check your purchase order/specifications - Lyra B and Lyra Plus models have 256MB SPI NAND</p> <p>To erase SPI NAND:</p> <p>See the comprehensive SPI NAND Erase Guide for detailed step-by-step instructions.</p> <p>Quick Summary: 1. Download RKDevTool and drivers from the official Luckfox documentation 2. Enter Loader Mode (hold BOOT button while connecting USB) 3. Use RKDevTool to erase the flash 4. Insert Calculinux SD card and boot</p> <p>Critical Warning: SPI NAND Erase</p> <p>IMPORTANT: Erasing SPI NAND will permanently remove any existing firmware or data stored on the NAND flash. This process cannot be undone. Make sure you understand the implications before proceeding.</p> <p>Data Loss: All data on the SPI NAND will be permanently lost.</p> <p>Recovery: If you need to restore original firmware later, you'll need the original firmware files from the manufacturer or built from the SDK.</p> <p>Linux-based NAND Erase Methods</p> <p>Methods for erasing SPI NAND directly from Linux (without using external flashing tools) are not yet documented. Currently, the recommended approach is to use the official Luckfox flashing tools on a separate computer.</p> <p>Additional Resources</p> <p>For detailed NAND erase procedures and troubleshooting, refer to:</p> <ul> <li>Calculinux Guide: SPI NAND Erase Guide</li> <li>Official Luckfox Documentation: wiki.luckfox.com/Luckfox-Lyra/Image-flashing</li> </ul>"},{"location":"troubleshooting/boot-problems/#hardware-issues","title":"Hardware Issues","text":"<p>Hardware-related boot problems and solutions.</p>"},{"location":"troubleshooting/boot-problems/#sd-card-issues","title":"SD Card Issues","text":"<p>SD card related boot problems.</p> <p>This page is under development and will be populated with detailed troubleshooting information.</p>"},{"location":"troubleshooting/common-issues/","title":"Common Issues","text":"<p>General troubleshooting for common Calculinux problems.</p>"},{"location":"troubleshooting/common-issues/#general-system-issues","title":"General System Issues","text":"<p>Common system problems and their solutions.</p>"},{"location":"troubleshooting/common-issues/#performance-issues","title":"Performance Issues","text":"<p>System performance troubleshooting.</p>"},{"location":"troubleshooting/common-issues/#storage-issues","title":"Storage Issues","text":"<p>Storage-related problems and solutions.</p>"},{"location":"troubleshooting/common-issues/#package-management-issues","title":"Package Management Issues","text":"<p>opkg and package-related troubleshooting.</p> <p>This page is under development and will be populated with detailed troubleshooting information for common issues.</p>"},{"location":"troubleshooting/display/","title":"Display Issues","text":"<p>Troubleshooting display-related problems.</p>"},{"location":"troubleshooting/display/#display-not-working","title":"Display Not Working","text":"<p>Detailed troubleshooting for display issues.</p>"},{"location":"troubleshooting/display/#display-corruption","title":"Display Corruption","text":"<p>Solutions for display corruption problems.</p>"},{"location":"troubleshooting/display/#backlight-issues","title":"Backlight Issues","text":"<p>Backlight troubleshooting information.</p>"},{"location":"troubleshooting/display/#spi-display-problems","title":"SPI Display Problems","text":"<p>SPI-specific display troubleshooting.</p> <p>This page is under development and will be populated with detailed display troubleshooting information.</p>"},{"location":"troubleshooting/erase-nand/","title":"Erasing SPI NAND Flash","text":"<p>This guide explains how to erase the SPI NAND flash memory on Luckfox Lyra boards that include onboard flash storage.</p> <p>Critical Warning: Data Loss</p> <p>Erasing SPI NAND will permanently delete ALL data stored on the NAND flash. This action cannot be undone. Ensure you have backups of any important data before proceeding.</p>"},{"location":"troubleshooting/erase-nand/#why-erase-spi-nand","title":"Why Erase SPI NAND?","text":"<p>The Luckfox Lyra boot process prioritizes SPI NAND flash over SD cards. If your board has SPI NAND with existing firmware:</p> <ul> <li>The board will boot from NAND instead of your Calculinux SD card</li> <li>Your SD card will be ignored even if properly flashed</li> <li>You must erase the NAND to enable SD card booting</li> </ul>"},{"location":"troubleshooting/erase-nand/#which-boards-have-spi-nand","title":"Which Boards Have SPI NAND?","text":"Board Model SPI NAND Notes Luckfox Lyra (Base) \u274c No SD card only Luckfox Lyra B \u2705 Yes 256MB SPI NAND Luckfox Lyra Plus \u2705 Yes 256MB SPI NAND Luckfox Lyra Ultra/Ultra W N/A Uses eMMC, not NAND Luckfox Lyra Zero W Varies Check your specific model Luckfox Lyra Pi Varies Check your specific model"},{"location":"troubleshooting/erase-nand/#checking-if-you-have-spi-nand","title":"Checking If You Have SPI NAND","text":"<p>Visual Inspection: - Look for an additional chip on the board labeled \"SPI NAND\" or similar - Check your purchase order/product specifications</p> <p>Check Product Documentation: - Refer to the Luckfox Lyra documentation for your specific model</p>"},{"location":"troubleshooting/erase-nand/#erasure-methods","title":"Erasure Methods","text":""},{"location":"troubleshooting/erase-nand/#method-1-windows-rkdevtool-recommended","title":"Method 1: Windows - RKDevTool (Recommended)","text":"<p>This is the easiest and most reliable method for most users.</p>"},{"location":"troubleshooting/erase-nand/#prerequisites","title":"Prerequisites","text":"<ul> <li>Windows PC</li> <li>USB Type-A to Type-C cable (data-capable)</li> <li>Luckfox Lyra board with SPI NAND</li> </ul>"},{"location":"troubleshooting/erase-nand/#step-1-download-required-tools","title":"Step 1: Download Required Tools","text":"<ol> <li>RK Driver Assistant: Download v5.13</li> <li>RKDevTool: Download v3.31</li> <li>Luckfox Firmware (any official image): Download from Luckfox</li> </ol>"},{"location":"troubleshooting/erase-nand/#step-2-install-drivers","title":"Step 2: Install Drivers","text":"<ol> <li>Extract the RK Driver Assistant ZIP file</li> <li>Run <code>DriverInstall.exe</code></li> <li>Click \"Install Driver\"</li> <li>Restart your computer after installation completes</li> </ol>"},{"location":"troubleshooting/erase-nand/#step-3-enter-loader-mode","title":"Step 3: Enter Loader Mode","text":"<ol> <li>Extract and open RKDevTool</li> <li>Method A - Using BOOT button:</li> <li>Disconnect the Luckfox Lyra from USB</li> <li>Hold down the BOOT button on the board</li> <li>While holding BOOT, connect the USB cable to your PC</li> <li> <p>Wait 2-3 seconds, then release the BOOT button</p> </li> <li> <p>Method B - Using RESET button:</p> </li> <li>With the board connected via USB</li> <li>Hold down RESET button</li> <li>While holding RESET, press and hold BOOT button</li> <li>Release RESET, wait 2 seconds</li> <li> <p>Release BOOT</p> </li> <li> <p>RKDevTool should display: <code>Found One LOADER Device</code></p> </li> </ol> <p></p> <p>Troubleshooting Device Detection</p> <p>If the device is not detected, check Windows Device Manager:</p> <ul> <li>Correct (Loader Mode): Should show \"Rockusb Device\" under \"Universal Serial Bus controllers\"</li> <li>Wrong: Shows as \"ADB Interface\" or other device</li> </ul> <p>If not detected properly, try a different USB cable or USB port.</p>"},{"location":"troubleshooting/erase-nand/#step-4-erase-the-nand-flash","title":"Step 4: Erase the NAND Flash","text":"<ol> <li>In RKDevTool, click the \"Advanced Function\" tab (\u9ad8\u7ea7\u529f\u80fd)</li> <li>Click \"Erase Flash\" button</li> <li>Wait for the process to complete</li> <li>Tool will display: \"Erase Flash Success\"</li> </ol> <p>Alternatively, you can erase by flashing a minimal firmware:</p> <ol> <li>Click the \"Firmware\" tab</li> <li>Click the folder icon and select the downloaded firmware <code>update.img</code></li> <li>Click \"Upgrade\" button</li> <li>Wait for completion: \"Download Successful\"</li> </ol> <p></p>"},{"location":"troubleshooting/erase-nand/#step-5-verify-erasure","title":"Step 5: Verify Erasure","text":"<ol> <li>Disconnect the USB cable</li> <li>Insert your Calculinux SD card</li> <li>Power on the device</li> <li>The device should now boot from the SD card</li> </ol>"},{"location":"troubleshooting/erase-nand/#method-2-linux-x86_64-platform","title":"Method 2: Linux (x86_64 Platform)","text":"<p>This method uses command-line tools on Linux.</p>"},{"location":"troubleshooting/erase-nand/#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Linux PC (tested on Ubuntu 22.04)</li> <li>Luckfox SDK or upgrade_tool</li> <li>USB Type-A to Type-C cable</li> </ul>"},{"location":"troubleshooting/erase-nand/#step-1-download-tools","title":"Step 1: Download Tools","text":"<p>Download the Luckfox SDK which includes the flashing tools: - Luckfox SDK Setup Guide</p> <p>Or download standalone upgrade_tool: - Available in the SDK under <code>tools/linux/Linux_Upgrade_Tool/</code></p>"},{"location":"troubleshooting/erase-nand/#step-2-enter-loader-mode","title":"Step 2: Enter Loader Mode","text":"<ol> <li>Hold the BOOT button while connecting the board to your PC</li> <li>Verify detection with <code>lsusb</code>:</li> </ol> <pre><code>lsusb | grep Rockchip\n</code></pre> <p>You should see output indicating Loader mode: <pre><code>Bus 001 Device 007: ID 2207:350f Fuzhou Rockchip Electronics Company\n</code></pre></p>"},{"location":"troubleshooting/erase-nand/#step-3-erase-using-rkflashsh","title":"Step 3: Erase Using rkflash.sh","text":"<p>If you have the full SDK:</p> <pre><code>cd /path/to/luckfox-sdk\nsudo ./rkflash.sh erase\n</code></pre>"},{"location":"troubleshooting/erase-nand/#step-4-verify","title":"Step 4: Verify","text":"<pre><code># Check the flash is erased\nsudo ./rkflash.sh query\n</code></pre>"},{"location":"troubleshooting/erase-nand/#method-3-maskrom-mode-advancedrecovery","title":"Method 3: MaskRom Mode (Advanced/Recovery)","text":"<p>Use this method only if Loader Mode fails or the device is in an unrecoverable state.</p> <p>Advanced Users Only</p> <p>MaskRom mode requires physical hardware manipulation and should only be used when Loader mode fails.</p>"},{"location":"troubleshooting/erase-nand/#entering-maskrom-mode","title":"Entering MaskRom Mode","text":"<ol> <li>Locate the Flash Chip: Find the SPI NAND flash chip on your board</li> <li>Identify GND Pin: Locate a ground pin near the flash chip</li> <li>Short Circuit Method:</li> <li>Disconnect power from the board</li> <li>Use tweezers or a wire to short <code>FSPI_CLK</code> pin to <code>GND</code></li> <li>While keeping the short, connect USB cable</li> <li>RKDevTool should display: <code>Found One MASKROM Device</code></li> <li>Remove the short circuit once detected</li> </ol> <ol> <li>Erase in MaskRom:</li> <li>Use RKDevTool \"Erase Flash\" function</li> <li>Or flash a minimal firmware image</li> </ol>"},{"location":"troubleshooting/erase-nand/#method-4-linux-on-the-device-not-yet-documented","title":"Method 4: Linux on the Device (Not Yet Documented)","text":"<p>Method Not Available</p> <p>Methods for erasing SPI NAND directly from Linux running on the Luckfox Lyra (without external flashing tools) are not yet documented or tested. </p> <p>This would theoretically be possible using <code>mtd-utils</code> and <code>/dev/mtdX</code> devices, but specific procedures for Calculinux have not been established.</p>"},{"location":"troubleshooting/erase-nand/#after-erasing","title":"After Erasing","text":"<p>Once the SPI NAND is erased:</p> <ol> <li>Insert SD Card: Insert your Calculinux SD card</li> <li>Power On: Connect power or USB</li> <li>Boot: The device should now boot from the SD card</li> <li>Verify: Check that Calculinux boots successfully</li> </ol>"},{"location":"troubleshooting/erase-nand/#common-issues","title":"Common Issues","text":""},{"location":"troubleshooting/erase-nand/#issue-board-still-boots-from-nand","title":"Issue: Board Still Boots from NAND","text":"<p>Symptoms: SD card is ignored, old firmware still runs</p> <p>Solutions: - Verify the erase completed successfully - Try the erase process again - Try MaskRom mode instead of Loader mode - Check that your SD card is properly flashed</p>"},{"location":"troubleshooting/erase-nand/#issue-cannot-enter-loader-mode","title":"Issue: Cannot Enter Loader Mode","text":"<p>Symptoms: RKDevTool doesn't detect device</p> <p>Solutions: - Try different USB cable (must be data-capable) - Try different USB port - Check Device Manager for driver issues - Reinstall RK Driver Assistant - Try MaskRom mode</p>"},{"location":"troubleshooting/erase-nand/#issue-erase-fails-midway","title":"Issue: Erase Fails Midway","text":"<p>Symptoms: Erase process errors or hangs</p> <p>Solutions: - Disconnect and retry - Try using MaskRom mode - Ensure stable USB connection - Check power supply is adequate</p>"},{"location":"troubleshooting/erase-nand/#issue-device-wont-boot-after-erase","title":"Issue: Device Won't Boot After Erase","text":"<p>Symptoms: No boot after erasing NAND</p> <p>This is expected behavior! With NAND erased and no SD card: - Insert your Calculinux SD card - Power on the device - It should boot from SD card</p>"},{"location":"troubleshooting/erase-nand/#recovery-options","title":"Recovery Options","text":"<p>If you need to restore the original Luckfox firmware to NAND:</p> <ol> <li>Download the official Luckfox firmware for your board model</li> <li>Follow the official flashing guide</li> <li>Flash the firmware to SPI NAND using RKDevTool</li> </ol>"},{"location":"troubleshooting/erase-nand/#additional-resources","title":"Additional Resources","text":"<ul> <li>Official Luckfox Flashing Guide: wiki.luckfox.com/Luckfox-Lyra/Image-flashing</li> <li>Luckfox Forum: forums.luckfox.com</li> <li>RK Driver Downloads: Luckfox Tools</li> </ul>"},{"location":"troubleshooting/erase-nand/#questions","title":"Questions?","text":"<p>If you encounter issues not covered here:</p> <ol> <li>Check the Boot Problems troubleshooting guide</li> <li>Ask in the Calculinux Forum</li> <li>Refer to Luckfox Official Documentation</li> <li>Open a GitHub Issue</li> </ol> <p>Remember: Erasing SPI NAND is a one-way operation. Make sure you understand the implications before proceeding.</p>"},{"location":"troubleshooting/faq/","title":"Troubleshooting &amp; FAQ","text":"<p>Common issues and frequently asked questions about Calculinux.</p>"},{"location":"troubleshooting/faq/#quick-diagnostics","title":"Quick Diagnostics","text":"<p>Before diving into specific issues, run these basic checks:</p> <pre><code># Check system info\nuname -a\ncat /proc/cpuinfo | grep -i \"model name\"\nfree -h\n\n# Check disk space\ndf -h\n\n# Check boot messages\ndmesg | less\n\n# Check system logs\njournalctl -b\n</code></pre>"},{"location":"troubleshooting/faq/#most-common-issues","title":"Most Common Issues","text":""},{"location":"troubleshooting/faq/#issue-system-wont-boot","title":"Issue: System Won't Boot","text":"<p>Symptoms: No display activity, device appears dead</p> <p>Possible Causes: 1. SPI NAND not erased (most common with NAND versions) 2. Corrupt SD card image 3. SD card not inserted properly 4. Insufficient power supply 5. Hardware connection issue</p> <p>Solutions: - See Boot Problems for detailed troubleshooting - Verify SPI NAND was erased: NAND Erasing Guide - Try different power supply (5V/2A minimum) - Reflash SD card - Reseat hardware connections</p>"},{"location":"troubleshooting/faq/#issue-display-not-working","title":"Issue: Display Not Working","text":"<p>Symptoms: System boots but display stays blank</p> <p>Quick Fixes: <pre><code># Check if framebuffer exists\nls -l /dev/fb0\n\n# Test display with color pattern\ncat /dev/urandom &gt; /dev/fb0\n\n# Check display driver\ndmesg | grep -i display\nlsmod | grep fb\n</code></pre></p> <p>See Display Issues for more details.</p>"},{"location":"troubleshooting/faq/#issue-keyboard-not-responding","title":"Issue: Keyboard Not Responding","text":"<p>Symptoms: Cannot type or keys don't register</p> <p>Quick Fixes: <pre><code># Check input devices\ncat /proc/bus/input/devices\n\n# Test keyboard\nevtest /dev/input/event0\n\n# Check driver\ndmesg | grep -i keyboard\n</code></pre></p> <p>See Input Problems for more details.</p>"},{"location":"troubleshooting/faq/#issue-network-not-working","title":"Issue: Network Not Working","text":"<p>Symptoms: Cannot connect to network</p> <p>Quick Check: <pre><code># Check interfaces\nip link\n\n# Check connectivity\nping 8.8.8.8\n\n# Check DNS\ncat /etc/resolv.conf\n</code></pre></p> <p>See Network Issues for solutions.</p>"},{"location":"troubleshooting/faq/#issue-out-of-space","title":"Issue: Out of Space","text":"<p>Symptoms: \"No space left on device\" errors</p> <p>Solution: <pre><code># Check disk usage\ndf -h\n\n# Find large files\ndu -h /home | sort -h | tail -20\n\n# Clean package cache\nopkg clean\n\n# Note: Filesystem expansion is handled automatically by the pre-init script\n# No manual intervention required for SD card expansion\n</code></pre></p>"},{"location":"troubleshooting/faq/#issue-system-running-slow","title":"Issue: System Running Slow","text":"<p>Possible Causes: - Insufficient RAM - Slow SD card - Too many services running - Swap thrashing</p> <p>Solutions: <pre><code># Check memory\nfree -h\n\n# Check swap\nswapon --show\n\n# Check running processes\nhtop  # or top\n\n# Disable unnecessary services\nsystemctl list-unit-files --state=enabled\nsystemctl disable &lt;service-name&gt;\n</code></pre></p>"},{"location":"troubleshooting/faq/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"troubleshooting/faq/#general-questions","title":"General Questions","text":"<p>Q: What is Calculinux?</p> <p>A: Calculinux is a Linux distribution built specifically for the PicoCalc handheld computer when equipped with a Luckfox Lyra or compatible SBC. It provides a full Linux environment in a pocket-sized device.</p> <p>Q: Is this the same as the stock PicoCalc firmware?</p> <p>A: No. The stock PicoCalc uses a Raspberry Pi Pico running PicoMite MMBasic firmware. Calculinux requires replacing this with a Luckfox Lyra SBC to run full Linux.</p> <p>Q: Will this void my warranty?</p> <p>A: Yes. Opening the PicoCalc and replacing the internal board voids the warranty. Proceed at your own risk.</p> <p>Q: Can I revert to the original firmware?</p> <p>A: Yes, if you kept the original RP2040 board. Simply reinstall it and reflash the original firmware.</p>"},{"location":"troubleshooting/faq/#hardware-questions","title":"Hardware Questions","text":"<p>Q: Which Luckfox Lyra version should I buy?</p> <p>A: The 128MB version without SPI NAND is recommended for simplicity. The SPI NAND versions work but require an extra NAND erasing step.</p> <p>Q: What size SD card do I need?</p> <p>A: Minimum 8GB, but 16GB or 32GB is recommended for comfortable use.</p> <p>Q: Does it work with other SBCs?</p> <p>A: Currently only Luckfox Lyra is officially supported. Milk-V Duo support is planned. Other boards may work with community modifications.</p> <p>Q: Can I use WiFi?</p> <p>A: Not built-in, but USB WiFi adapters should work (requires testing). USB Ethernet adapters are confirmed working.</p> <p>Q: How long does the battery last?</p> <p>A: Battery life is less than stock firmware due to running full Linux. Expect 4-6 hours depending on usage. External USB battery packs work well, and you can always swap batteries.</p>"},{"location":"troubleshooting/faq/#software-questions","title":"Software Questions","text":"<p>Q: Can I install regular Linux software?</p> <p>A: Yes, using the opkg package manager. Many standard Linux packages are available, though some may not work well on the small display or with limited RAM. We are still building up the software library - if the application you're looking for is not present please request it!</p> <p>Q: Can I run a graphical desktop?</p> <p>A: Yes, lightweight desktop environments like LXDE work on 128MB+ systems. Full desktops like GNOME/KDE are too heavy.</p> <p>Q: Can I run Python/C/other languages?</p> <p>A: Yes, development tools including Python, GCC, and other compilers are available.</p> <p>Q: Can I browse the web?</p> <p>A: Text-mode browsers (lynx, w3m) work well. Graphical browsers require 256MB+ RAM and are slow on the small display.</p> <p>Q: How do I install more software?</p> <p>A: Use the opkg package manager: <pre><code>opkg update\nopkg install &lt;package-name&gt;\n</code></pre></p> <p>See Package Management for details.</p>"},{"location":"troubleshooting/faq/#build-development-questions","title":"Build &amp; Development Questions","text":"<p>Q: How do I build Calculinux from source?</p> <p>A: Follow the Developer Guide, starting with Yocto Setup.</p> <p>Q: How long does a build take?</p> <p>A: First build: ~2 hours depending on your computer. Subsequent builds: much faster (minutes to an hour).</p> <p>Q: Can I contribute to Calculinux?</p> <p>A: Absolutely! See Contributing Guide for how to get involved.</p> <p>Q: Where is the source code?</p> <p>A: GitHub: github.com/Calculinux</p>"},{"location":"troubleshooting/faq/#troubleshooting-questions","title":"Troubleshooting Questions","text":"<p>Q: Why won't my system boot from SD card?</p> <p>A: Most likely SPI NAND interference. If your Luckfox Lyra has SPI NAND, you must erase it first. See Boot Problems.</p> <p>Q: Why is my system so slow?</p> <p>A: Check RAM usage (<code>free -h</code>). With only 128MB, many applications will struggle. If you are trying to use a GUI, you may want to explore other lighter options.</p> <p>Q: Where can I get help?</p> <p>A:  1. Check this documentation 2. Search the Forum 3. Ask in community chat 4. Open a GitHub issue</p> <p>Q: The display shows garbage/corruption</p> <p>A: Try: - Reducing SPI clock speed in device tree. The default should be stable, however. - Reflashing SD card - Testing with different SD card</p>"},{"location":"troubleshooting/faq/#error-messages","title":"Error Messages","text":""},{"location":"troubleshooting/faq/#common-error-messages-and-solutions","title":"Common Error Messages and Solutions","text":"Error Message Cause Solution \"Kernel panic - not syncing\" Corrupt kernel or bad device tree Reflash SD card, verify image \"No space left on device\" Disk full Clean cache, expand filesystem \"Out of memory\" RAM exhausted Close apps, disable services, upgrade RAM \"Cannot allocate memory\" Memory fragmentation Reboot, reduce memory usage \"Unable to mount root fs\" Bad SD card or partition Check SD card, reflash \"Timeout waiting for device\" Hardware not detected Check connections, verify device tree"},{"location":"troubleshooting/faq/#getting-more-help","title":"Getting More Help","text":"<p>If you can't find a solution here:</p>"},{"location":"troubleshooting/faq/#information-to-include","title":"Information to Include","text":"<p>When asking for help, provide:</p> <ol> <li>Hardware: Luckfox Lyra version (RAM, NAND), SD card brand/size</li> <li>Software: Calculinux version/image variant</li> <li>Error messages: Exact text of errors</li> <li>What you tried: Steps you've already taken</li> <li>Logs: Relevant portions of <code>dmesg</code> or <code>journalctl</code></li> </ol>"},{"location":"troubleshooting/faq/#where-to-ask","title":"Where to Ask","text":"<ul> <li>Documentation: Check specific troubleshooting pages</li> <li>Forum: ClockworkPi Forum Thread</li> <li>GitHub: Issue Tracker</li> <li>Community: Links in Resources</li> </ul>"},{"location":"troubleshooting/faq/#still-stuck","title":"Still Stuck?","text":""},{"location":"troubleshooting/faq/#debug-mode-boot","title":"Debug Mode Boot","text":"<p>Boot with more verbose output:</p> <pre><code># Edit boot command in U-Boot\n# Add to kernel command line:\nloglevel=7 debug\n</code></pre>"},{"location":"troubleshooting/faq/#serial-console","title":"Serial Console","text":"<p>Connect via serial for full boot output:</p> <pre><code># From another computer\nscreen /dev/ttyUSB0 1500000\n</code></pre>"},{"location":"troubleshooting/faq/#safe-mode","title":"Safe Mode","text":"<p>Boot to minimal system:</p> <pre><code># Connect with a serial cable, then reboot.\n# In U-Boot, add to kernel command line:\nsingle\n</code></pre> <p>This boots to single-user mode for recovery.</p>"},{"location":"troubleshooting/faq/#related-pages","title":"Related Pages","text":"<ul> <li>Boot Problems - Detailed boot troubleshooting</li> <li>Display Issues - Display-specific problems</li> <li>Input Problems - Keyboard/input issues</li> <li>Network Issues - Networking problems</li> <li>Common Issues - General issues and solutions</li> </ul> <p>Can't find your issue? Open a documentation issue to request it be added!</p>"},{"location":"troubleshooting/input/","title":"Input Problems","text":"<p>Troubleshooting keyboard and input device issues.</p>"},{"location":"troubleshooting/input/#keyboard-not-responding","title":"Keyboard Not Responding","text":"<p>Detailed keyboard troubleshooting steps.</p>"},{"location":"troubleshooting/input/#key-mapping-issues","title":"Key Mapping Issues","text":"<p>Solutions for incorrect key mappings.</p>"},{"location":"troubleshooting/input/#input-lag","title":"Input Lag","text":"<p>Troubleshooting input lag problems.</p>"},{"location":"troubleshooting/input/#debounce-issues","title":"Debounce Issues","text":"<p>Information about key debounce problems and solutions.</p> <p>This page is under development and will be populated with detailed input troubleshooting information.</p>"},{"location":"troubleshooting/network/","title":"Network Issues","text":"<p>Troubleshooting network connectivity problems.</p>"},{"location":"troubleshooting/network/#wifi-not-working","title":"WiFi Not Working","text":"<p>WiFi troubleshooting steps.</p>"},{"location":"troubleshooting/network/#ethernet-issues","title":"Ethernet Issues","text":"<p>USB Ethernet adapter troubleshooting.</p>"},{"location":"troubleshooting/network/#dns-problems","title":"DNS Problems","text":"<p>DNS resolution issues and solutions.</p>"},{"location":"troubleshooting/network/#connection-timeouts","title":"Connection Timeouts","text":"<p>Network timeout troubleshooting.</p> <p>This page is under development and will be populated with detailed network troubleshooting information.</p>"},{"location":"user-guide/package-management/","title":"Package Management","text":"<p>Calculinux uses <code>opkg</code> (Open Package Management) for installing, updating, and removing software packages.</p>"},{"location":"user-guide/package-management/#understanding-package-feeds","title":"Understanding Package Feeds","text":"<p>Calculinux packages are hosted on package feeds at <code>https://opkg.calculinux.org/</code>. Your system is automatically configured to use the appropriate feed based on your installed version. You typically don't need to modify the feed configuration.</p>"},{"location":"user-guide/package-management/#feed-types","title":"Feed Types","text":"<p>Continuous Feed: Rolling release packages with the latest updates - URL format: <code>https://opkg.calculinux.org/ipk/{codename}/continuous/</code> - Updated automatically as changes are made - Best for staying current with development - May include experimental features - Used by main and develop branch builds</p> <p>Release Feed: Stable versioned packages - URL format: <code>https://opkg.calculinux.org/ipk/{codename}/release/</code> - Locked to specific release versions - Thoroughly tested before release - Recommended for production use - Used by tagged releases (e.g., v1.0.0)</p>"},{"location":"user-guide/package-management/#which-feed-am-i-using","title":"Which Feed Am I Using?","text":"<p>Check your current feed configuration:</p> <pre><code>cat /etc/opkg/base-feeds.conf\n</code></pre> <p>Example output for a continuous build: <pre><code>src/gz all https://opkg.calculinux.org/ipk/walnascar/continuous/all\nsrc/gz cortexa7t2hf-neon-vfpv4 https://opkg.calculinux.org/ipk/walnascar/continuous/cortexa7t2hf-neon-vfpv4\nsrc/gz luckfox_lyra https://opkg.calculinux.org/ipk/walnascar/continuous/luckfox_lyra\n</code></pre></p> <p>The feed configuration is set during the image build process and matches the image type: - Images from <code>main</code> branch \u2192 <code>walnascar/continuous</code> feed - Images from <code>develop</code> branch \u2192 <code>develop/continuous</code> feed - Images from tagged releases \u2192 <code>walnascar/release</code> feed</p>"},{"location":"user-guide/package-management/#basic-commands","title":"Basic Commands","text":""},{"location":"user-guide/package-management/#updating-package-lists","title":"Updating Package Lists","text":"<p>Before installing or updating packages, refresh the package list:</p> <pre><code>opkg update\n</code></pre>"},{"location":"user-guide/package-management/#installing-packages","title":"Installing Packages","text":"<p>Install a package:</p> <pre><code>opkg install &lt;package-name&gt;\n</code></pre> <p>Example: <pre><code>opkg install vim\n</code></pre></p>"},{"location":"user-guide/package-management/#removing-packages","title":"Removing Packages","text":"<p>Remove a package:</p> <pre><code>opkg remove &lt;package-name&gt;\n</code></pre> <p>Remove a package and its configuration files:</p> <pre><code>opkg remove --force-removal-of-dependent-packages &lt;package-name&gt;\n</code></pre>"},{"location":"user-guide/package-management/#searching-for-packages","title":"Searching for Packages","text":"<p>Search for available packages:</p> <pre><code>opkg list | grep &lt;search-term&gt;\n</code></pre> <p>Example: <pre><code>opkg list | grep python\n</code></pre></p> <p>Search for installed packages:</p> <pre><code>opkg list-installed | grep &lt;search-term&gt;\n</code></pre>"},{"location":"user-guide/package-management/#viewing-package-information","title":"Viewing Package Information","text":"<p>Get information about a package:</p> <pre><code>opkg info &lt;package-name&gt;\n</code></pre> <p>List files in an installed package:</p> <pre><code>opkg files &lt;package-name&gt;\n</code></pre>"},{"location":"user-guide/package-management/#updating-packages","title":"Updating Packages","text":"<p>Update all installed packages:</p> <pre><code>opkg update\nopkg upgrade\n</code></pre> <p>Update a specific package:</p> <pre><code>opkg update\nopkg upgrade &lt;package-name&gt;\n</code></pre>"},{"location":"user-guide/package-management/#advanced-usage","title":"Advanced Usage","text":""},{"location":"user-guide/package-management/#installing-from-a-file","title":"Installing from a File","text":"<p>Install a <code>.ipk</code> package file directly:</p> <pre><code>opkg install /path/to/package.ipk\n</code></pre>"},{"location":"user-guide/package-management/#listing-available-packages","title":"Listing Available Packages","text":"<p>List all available packages:</p> <pre><code>opkg list\n</code></pre> <p>List all installed packages:</p> <pre><code>opkg list-installed\n</code></pre> <p>List upgradeable packages:</p> <pre><code>opkg list-upgradable\n</code></pre>"},{"location":"user-guide/package-management/#finding-which-package-provides-a-file","title":"Finding Which Package Provides a File","text":"<pre><code>opkg search &lt;filename&gt;\n</code></pre> <p>Example: <pre><code>opkg search /usr/bin/python3\n</code></pre></p>"},{"location":"user-guide/package-management/#package-dependencies","title":"Package Dependencies","text":"<p>View package dependencies:</p> <pre><code>opkg depends &lt;package-name&gt;\n</code></pre> <p>View reverse dependencies (what depends on this package):</p> <pre><code>opkg whatdepends &lt;package-name&gt;\n</code></pre>"},{"location":"user-guide/package-management/#feed-configuration","title":"Feed Configuration","text":"<p>Automatic Configuration</p> <p>Package feeds are automatically configured during image creation. You typically don't need to change feed configuration unless you're testing different package versions or have specific advanced requirements.</p>"},{"location":"user-guide/package-management/#switching-feeds-advanced","title":"Switching Feeds (Advanced)","text":"<p>Advanced Users Only</p> <p>Switching feeds may cause package version conflicts and is only recommended for testing or specific use cases. Most users should use the pre-configured feed that came with their image.</p> <p>To switch from continuous to release feed, edit <code>/etc/opkg/base-feeds.conf</code>:</p> <pre><code># Backup current configuration\ncp /etc/opkg/base-feeds.conf /etc/opkg/base-feeds.conf.backup\n\n# Edit feed URLs\nvi /etc/opkg/base-feeds.conf\n</code></pre> <p>Change <code>continuous</code> to <code>release</code> in all URLs (or vice versa):</p> <pre><code>src/gz all https://opkg.calculinux.org/ipk/walnascar/release/all\nsrc/gz cortexa7t2hf-neon-vfpv4 https://opkg.calculinux.org/ipk/walnascar/release/cortexa7t2hf-neon-vfpv4\nsrc/gz luckfox_lyra https://opkg.calculinux.org/ipk/walnascar/release/luckfox_lyra\n</code></pre> <p>Then update:</p> <pre><code>opkg update\n</code></pre> <p>Persistence</p> <p>Changes to <code>/etc/opkg/base-feeds.conf</code> persist across reboots because Calculinux uses overlayfs - your changes are stored in the upper (writable) layer.</p>"},{"location":"user-guide/package-management/#adding-custom-feeds","title":"Adding Custom Feeds","text":"<p>To add a custom package feed:</p> <pre><code>echo \"src/gz custom-feed https://example.com/ipk/all\" &gt;&gt; /etc/opkg/custom-feeds.conf\nopkg update\n</code></pre>"},{"location":"user-guide/package-management/#development-vs-stable-codenames","title":"Development vs. Stable Codenames","text":"<p>Different Calculinux versions use different distribution codenames in their feed URLs:</p> <ul> <li>walnascar: Stable releases and main branch continuous builds</li> <li>Example: <code>https://opkg.calculinux.org/ipk/walnascar/continuous/</code></li> <li> <p>Example: <code>https://opkg.calculinux.org/ipk/walnascar/release/</code></p> </li> <li> <p>develop: Development branch builds (bleeding-edge features)</p> </li> <li>Example: <code>https://opkg.calculinux.org/ipk/develop/continuous/</code></li> </ul> <p>Codename Compatibility</p> <p>Switching between different codenames (e.g., <code>walnascar</code> \u2194 <code>develop</code>) may cause significant package compatibility issues. This is not recommended except for advanced testing scenarios. If you want bleeding-edge packages, it's better to flash a new develop branch image rather than switching feeds.</p>"},{"location":"user-guide/package-management/#common-tasks","title":"Common Tasks","text":""},{"location":"user-guide/package-management/#installing-development-tools","title":"Installing Development Tools","text":"<pre><code>opkg update\nopkg install gcc g++ make git\n</code></pre>"},{"location":"user-guide/package-management/#installing-python-packages","title":"Installing Python Packages","text":"<pre><code>opkg update\nopkg install python3 python3-pip\n</code></pre>"},{"location":"user-guide/package-management/#installing-networking-tools","title":"Installing Networking Tools","text":"<pre><code>opkg update\nopkg install curl wget netcat iproute2\n</code></pre>"},{"location":"user-guide/package-management/#cleaning-package-cache","title":"Cleaning Package Cache","text":"<p>Free up disk space by removing downloaded package files:</p> <pre><code>rm -rf /var/cache/opkg/*\n</code></pre>"},{"location":"user-guide/package-management/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user-guide/package-management/#package-installation-fails","title":"Package Installation Fails","text":"<p>If a package fails to install:</p> <ol> <li> <p>Update package lists:    <pre><code>opkg update\n</code></pre></p> </li> <li> <p>Check available space:    <pre><code>df -h\n</code></pre></p> </li> <li> <p>Check error message for missing dependencies:    <pre><code>opkg install --force-depends &lt;package-name&gt;\n</code></pre></p> </li> </ol>"},{"location":"user-guide/package-management/#repository-connection-issues","title":"Repository Connection Issues","text":"<p>If you can't connect to the package feeds:</p> <ol> <li> <p>Check network connectivity:    <pre><code>ping opkg.calculinux.org\n</code></pre></p> </li> <li> <p>Verify feed URLs:    <pre><code>cat /etc/opkg/base-feeds.conf\n</code></pre></p> </li> <li> <p>Try updating manually:    <pre><code>opkg update --verbosity=3\n</code></pre></p> </li> </ol>"},{"location":"user-guide/package-management/#version-conflicts","title":"Version Conflicts","text":"<p>If you encounter version conflicts:</p> <pre><code># Force reinstallation\nopkg install --force-reinstall &lt;package-name&gt;\n\n# Force downgrade\nopkg install --force-downgrade &lt;package-name&gt;\n</code></pre>"},{"location":"user-guide/package-management/#broken-packages","title":"Broken Packages","text":"<p>To fix broken package installations:</p> <pre><code># Remove partially installed package\nopkg remove --force-remove &lt;package-name&gt;\n\n# Reinstall\nopkg update\nopkg install &lt;package-name&gt;\n</code></pre>"},{"location":"user-guide/package-management/#package-feed-structure","title":"Package Feed Structure","text":"<p>Calculinux package feeds are organized by architecture:</p> <ul> <li>all: Architecture-independent packages</li> <li>cortexa7t2hf-neon-vfpv4: ARM Cortex-A7 optimized packages</li> <li>luckfox_lyra: Board-specific packages for Luckfox Lyra</li> </ul> <p>Your system automatically uses packages from all relevant feeds.</p>"},{"location":"user-guide/package-management/#best-practices","title":"Best Practices","text":"<ol> <li>Always update before installing: Run <code>opkg update</code> before <code>opkg install</code></li> <li>Regular updates: Keep your system updated with <code>opkg update &amp;&amp; opkg upgrade</code></li> <li>Check dependencies: Use <code>opkg info</code> to check dependencies before installing</li> <li>Backup configurations: Keep backups of important config files before major updates</li> <li>Use stable feeds for production: Stick to release feeds for production devices</li> <li>Test on continuous feeds: Use continuous feeds for testing new features</li> </ol>"},{"location":"user-guide/package-management/#comparison-with-other-package-managers","title":"Comparison with Other Package Managers","text":"<p>If you're coming from other Linux distributions:</p> Opkg APT (Debian/Ubuntu) DNF (Fedora) <code>opkg update</code> <code>apt update</code> <code>dnf check-update</code> <code>opkg install</code> <code>apt install</code> <code>dnf install</code> <code>opkg remove</code> <code>apt remove</code> <code>dnf remove</code> <code>opkg list</code> <code>apt list</code> <code>dnf list</code> <code>opkg upgrade</code> <code>apt upgrade</code> <code>dnf upgrade</code>"},{"location":"user-guide/package-management/#see-also","title":"See Also","text":"<ul> <li>System Configuration - Configure your system</li> <li>Updates - System update procedures</li> <li>Building Calculinux - Build configuration and feeds</li> <li>Adding Packages - Create your own packages</li> </ul>"}]}